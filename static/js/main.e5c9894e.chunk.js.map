{"version":3,"sources":["Components/BookButton/BookButton.module.scss","Pages/StartSreen/StrartSrceen.module.scss","Components/Preloader/preloader.module.scss","Pages/IntitializeOrderInfo/InitializeOrder.module.scss","Pages/BookPageAdditional/Additional.module.scss","Pages/BookPageLocation/BookPageLocation.module.scss","Pages/BookPageResult/ResultOrder.module.scss","Pages/BookPageModel/ModelPage.module.scss","Components/BookButton/BookButton.jsx","Images/map_city.svg","Components/Header/Header.jsx","Components/Main/Main.jsx","Images/menu_btn.svg","Images/close_menu_btn.svg","Components/SideBar/SideBar.jsx","Images/slider.png","Images/slide1.png","Images/slide2.png","Images/slide3.png","Images/left_arrow.svg","Images/right_arrow.svg","Components/Slider/Slider.jsx","Images/Telegram_white.svg","Images/Facebook_white.svg","Images/Instagram_white.svg","Components/BurgerMenu/BurgerMenu.jsx","API/api.js","Redux/orderPage-reducer.js","Redux/location-reducer.js","Redux/model-reducer.js","Images/loader.gif","Components/Preloader/Preloader.jsx","Components/AutoComplete/Autocomplete.jsx","Images/clean_input.svg","Images/map_marker.svg","Components/Map/EmptyMap.jsx","Components/Map/Map.jsx","Components/Map/PointsMapContainer.jsx","commonScripts/scripts.js","commonScripts/diffDateFormat.js","commonScripts/calcPrice.js","Components/OrderInfo/OrderInfo.jsx","Components/OrderInfo/OrderInfoContainer.jsx","Pages/BookPageLocation/BookPageLocation.jsx","Pages/BookPageLocation/BookPageLocationContainer.jsx","Components/BookingStages/BookingStages.jsx","Components/BookingStages/BookingStagesContainer.jsx","Components/RaioInput/RadioInput.jsx","Pages/BookPageModel/Model.jsx","Pages/BookPageModel/ModelContainer.jsx","Components/CheckBoxInput/CheckBoxInput.jsx","Pages/BookPageAdditional/Additional.jsx","Pages/BookPageAdditional/AdditionalContainer.jsx","Pages/ConfirmOrder/ConfirmOrder.jsx","commonScripts/formatCarNumber.js","Pages/BookPageResult/ResultOrder.jsx","Redux/confirmOrder-reducer.js","Pages/BookPageResult/ResultOrderContainer.jsx","Pages/ConfirmOrder/ConfirmOrderContainer.jsx","Pages/IntitializeOrderInfo/InitializeOrderInfo.jsx","Pages/IntitializeOrderInfo/InitializeOrderInfoContainer.jsx","Pages/BookPage/BookPage.jsx","Pages/BookPage/BookPageContainer.jsx","Pages/StartSreen/StartScreen.jsx","App.js","Redux/redux-store.js","index.js","Components/Slider/slide.module.scss","Components/BookingStages/BookingStages.module.scss","Components/Main/Main.module.scss","Components/SideBar/SideBar.module.scss","Components/RaioInput/RadioInput.module.scss","Pages/ConfirmOrder/ConfirmOrder.module.scss","Components/BurgerMenu/BurgerMenu.module.scss","Components/Header/Header.module.scss","Components/Map/Map.module.scss","Pages/BookPage/BookPage.module.scss","Components/AutoComplete/AutoComplete.module.scss","Components/CheckBoxInput/CheckBoxInput.module.scss","Components/OrderInfo/OrderInfo.module.scss"],"names":["module","exports","BookButton","props","className","s","btn","btnName","Header","headerWrapper","headerLogo","currentCity","src","city","Main","mainWrapper","mainTitle","mainLogo","name","mainSlog","to","mainFooter","copyright","href","phone","SideBar","setActive","isActive","langBtnClicked","changeSiteLang","sideBarWrapper","onClick","menuBtn","close_menu_btn","menu_btn","openMenuBtn","langBtnWrapper","langBtnWrapperMobile","langBtn","langBtnMobile","slides","img","slide","article","text","buttonColor","slide1","slide2","slide3","Slider","speed","renderBottomCenterControls","slideCount","currentSlide","goToSlide","slider_bottom","Array","map","e","key","undefined","type","aria-label","width","height","cx","cy","r","renderCenterLeftControls","previousSlide","sliderButton","alt","left_arrow","renderCenterRightControls","nextSlide","right_arrow","wrapAround","defaultControlsConfig","containerClassName","buttonContainer","pagingDotsContainerClassName","paginationContainer","pagingDotsStyle","fill","opacity","pagingDotsClassName","dot","slider","index","sliderItem","sliderImgWrapper","sliderImg","sliderContent","BurgerMenu","burgerMenuWrapper","burgerMenuContainer","burgerMenuLinksWrapper","burgerMenuLinks","socialLinks","tg","fb","inst","instance","axios","baseURL","headers","instanceGeoCode","simbirsoftAPI","get","then","response","data","res","post","orderId","address","params","geocode","coords","SET_CITIES","SET_POINTS","SET_AVAILABLE","SET_INPUT_CITY_VALUE","SET_INPUT_POINT_VALUE","SET_CITY_ADRESSES","SET_MODELS","SET_CATEGORIES","SET_RATE","SET_CONFIRM_FORM_ACTIVE","initialState","cities","points","isModelAvailable","currentInputCityValue","currentInputPointValue","cityAdresses","models","categories","rate","isConfirmFormActive","setConfirmFormActive","bool","setInputPointValue","value","orderPageReducer","state","action","SET_ADDRESS_COORDS","SET_CUR_ADDRESS_COORDS","SET_CUR_POINT_ADDRESS","RESET_COORDS","curAddressCoords","curPointAddress","setCurPointCoords","setCurPointAddress","locationReducer","regexp","startsWith","replace","match","SET_CAR_COLOR","SET_CAR_RATE","SET_CAR_RATE_ID","SET_CAR_PARAMS","SET_DIFF_DATE","UNSET_CAR_PARAMS","SET_CURRENT_MODEL","SET_START_DATE","SET_END_DATE","SET_RESULT_PRICE","currentModel","color","rateId","startDate","endDate","resultPrice","diffDate","additionalParameters","id","resultName","resultValue","price","checked","setCarColor","setCarRate","unsetCarParams","setDiffDate","date","setStartDate","setEndDate","setCurrentModel","model","modelReducer","exist","some","item","Preloader","preloaderWrapper","loader","Autocomplete","isOpen","filteredValues","itemClickHandler","length","autocomplete","autocompleteHide","autocompleteItem","EmptyMap","mapWrapper","center","zoom","PointsMap","handlerGetPointCoords","curPointCoords","pointAddress","coor","c","split","useRef","mySetCenter","coordinates","current","setCenter","useEffect","defaultState","instanceRef","geometry","options","iconLayout","iconImageHref","map_marker","iconImageSize","useMapMarginInDragging","connect","orderPage","location","getCoords","dispatch","a","GeoObjectCollection","featureMember","GeoObject","Point","pos","getCurPointCoords","getAddress","forEach","XFormatPrice","_number","parseFloat","exp10","Math","pow","round","rr","Number","toFixed","toString","b","prepareImgLink","imgLink","require","diffDateFormat","days","hours","minutes","countDays","countHours","countMinutes","floor","asDays","subtract","moment","duration","calcPrice","priceMin","addParams","paramsPrice","weeks","param","_data","ceil","_milliseconds","OrderInfo","available","btnLink","noLink","orderData","confirmData","cityId","pointId","carId","dateTo","diff","dateFrom","rateTypeId","isFullTank","isNeedChildChair","isRightWheel","orderInfoWrapper","yourOrderText","liName","liPointName","addressDots","addressOrderInfo","orderInfoCity","attrSpan","toUpperCase","slice","modelPrice","priceBorder","priceMax","modelPriceHide","orderInfoBtn","redBtn","hideBtn","disabled","confirm","setResultPrice","BookPageLocation","isModelAvail","inputCityValue","inputPointValue","setCityAdresses","setInputCityValue","setModelAvailable","resetCoords","useState","curCityInputValue","setCurCityValue","curPointInputValue","setCurPointValue","isInputCityAutoCompleteOpen","setInputCityAutoCompleteIsOpen","isInputPointAutoCompleteOpen","setInputPointAutoCompleteIsOpen","filteredCities","filter","toLowerCase","includes","filteredPoints","push","point","findLocationFormWrapper","locationContainer","findLocationFormContainer","formContainer","stopPropagation","fieldWrapper","inputField","placeholder","autoComplete","onChange","event","target","onKeyDown","count","keyCode","cleanInputBtn","clean_input","textContent","setOpen","mapContainer","geolocation","getCitiesThunkCreator","getPointsThunkCreator","adresses","BookingStages","orderStepsWrapper","orderStepsContainer","orderStep","RadioInput","inputName","currentInputType","handleChange","ratePrice","rateUnit","checkBoxWrapper","checkBox","htmlFor","radiLabel","notActiveLable","BookPageModel","modelName","currentModelType","setModelType","filteredCars","m","categoryId","modelPageWrapper","modelPageContainer","modelCarChoose","checkBoxesWrapper","modelCarImagesWrapper","car","thumbnail","modelCarBlock","modelClickHandler","carInfo","carModelName","carModelPrice","carImg","style","backgroundImage","path","getCars","getCategories","CheckBoxInput","checkBoxInput","defaultChecked","checkBoxLabel","Additional","cars","setCarParams","modelRate","startDateRedux","endDateRedux","setCarRateId","registerLocale","ru","locale","currentColor","setColor","handleColorChange","currentRate","setRate","isChecked","setCheck","handleParamsChange","parseInt","setCurStartDate","setCurEndDate","isCalenadarActive","isTest","setIsTest","additionalPageWrapepr","additionalPageContainer","additionalBlock","colors","additionalInputBlock","dataPickWrapper","dataFieldWrapper","dataInputField","placeholderText","clearButtonClassName","baseInput","selected","minDate","Date","handleStartDate","showTimeSelect","dateFormat","filterTime","time","selectedDate","getTime","handleEndDate","rateCheckBoxesWrapper","rateName","unit","additionalParametersCheckboxes","carRate","getRate","ConfirmOrder","handleFormSubmit","confirmOrderWrapper","confirmOrderContainer","onSubmit","render","handleSubmit","form","submitting","pristine","values","formWrapper","confirmOrderText","formBtnWrapper","formConfirmBtn","redColor","formatCarNumber","carNumber","first","toLocaleUpperCase","second","third","region","ResultOrder","resultOrderWrapper","resultOrderContainer","resultInfoBLock","carNameStyle","number","extraText","format","carImgWrapper","SET_CONFIRM_DATA","SET_ORDER_DATA","getOrderInfo","ConfirmOrderReducer","history","useHistory","pathname","searchString","postOrder","isRigthWheel","orderStatusId","Boolean","InitializeOrderInfo","queryString","parse","search","BookPage","isAvail","bookPageWrapper","bookHeaderWrapper","bookHeadContainer","exact","component","BookPageLocationContainer","BookPageModelContainer","AdditionalContainer","IntializeOrderInfoContainer","ResultOrderContainer","StartScreen","menuIsActive","setMenuActive","startScreenWrapper","App","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,IAAM,0B,oBCAxBD,EAAOC,QAAU,CAAC,mBAAqB,2C,oBCAvCD,EAAOC,QAAU,CAAC,iBAAmB,sC,mBCArCD,EAAOC,QAAU,CAAC,mBAAqB,4CAA4C,qBAAuB,8CAA8C,gBAAkB,yCAAyC,KAAO,8BAA8B,iBAAmB,0CAA0C,UAAY,mCAAmC,UAAY,mCAAmC,OAAS,gCAAgC,cAAgB,yC,+DCA5cD,EAAOC,QAAU,CAAC,sBAAwB,0CAA0C,wBAA0B,4CAA4C,qBAAuB,yCAAyC,gBAAkB,oCAAoC,kBAAoB,sCAAsC,gBAAkB,oCAAoC,qBAAuB,yCAAyC,gBAAkB,oCAAoC,iBAAmB,qCAAqC,eAAiB,mCAAmC,sBAAwB,0CAA0C,+BAAiC,qD,mBCArsBD,EAAOC,QAAU,CAAC,wBAA0B,kDAAkD,kBAAoB,4CAA4C,cAAgB,wCAAwC,aAAe,uCAAuC,WAAa,qCAAqC,cAAgB,wCAAwC,0BAA4B,oDAAoD,aAAe,yC,mBCArdD,EAAOC,QAAU,CAAC,mBAAqB,wCAAwC,qBAAuB,0CAA0C,gBAAkB,qCAAqC,KAAO,0BAA0B,iBAAmB,sCAAsC,UAAY,+BAA+B,UAAY,+BAA+B,OAAS,4BAA4B,cAAgB,qC,mBCA5aD,EAAOC,QAAU,CAAC,iBAAmB,oCAAoC,mBAAqB,sCAAsC,eAAiB,kCAAkC,kBAAoB,qCAAqC,sBAAwB,yCAAyC,cAAgB,iCAAiC,MAAQ,yBAAyB,QAAU,2BAA2B,OAAS,0BAA0B,aAAe,gCAAgC,cAAgB,mC,uJCQ3fC,EANI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,IAAlB,SAAwBH,EAAMI,W,QCLvB,MAA0B,qC,iBCoB1BC,EAdA,SAACL,GACd,OACE,sBAAKC,UAAWC,IAAEI,cAAlB,UAEI,sBAAML,UAAWC,IAAEK,WAAnB,4BAEF,sBAAKN,UAAWC,IAAEM,YAAlB,UACE,cAAC,IAAD,CAAUC,IAAKC,IACf,sBAAMT,UAAWC,IAAEQ,KAAnB,+DCiBOC,EAxBF,SAACX,GACZ,OACE,sBAAKC,UAAWC,IAAEU,YAAlB,UACE,cAAC,EAAD,IACA,sBAAKX,UAAWC,IAAEW,UAAlB,UACE,sBAAMZ,UAAWC,IAAEY,SAAnB,oEACA,sBAAMb,UAAWC,IAAEY,SAAW,IAAMZ,IAAEa,KAAtC,4BACA,sBAAMd,UAAWC,IAAEc,SAAnB,qNAGF,cAAC,IAAD,CAASC,GAAI,0BAAb,SACE,cAAC,EAAD,CAAYb,QAAS,qFAGvB,sBAAKH,UAAWC,IAAEgB,WAAlB,UACE,sBAAMjB,UAAWC,IAAEiB,UAAnB,mDACA,mBAAGC,KAAK,mBAAmBnB,UAAWC,IAAEmB,MAAxC,sC,iBCvBO,MAA0B,qCCA1B,MAA0B,2CC6C1BC,EAvCC,SAAC,GAKV,IAJLC,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eAEA,OACE,sBAAKzB,UAAWC,IAAEyB,eAAlB,UACE,wBACEC,QAAS,kBAAML,GAAWC,IAC1BvB,UAAWC,IAAE2B,QAFf,SAIGL,EACC,cAAC,IAAD,CAAUf,IAAKqB,IAEf,cAAC,IAAD,CAAUrB,IAAKsB,EAAU9B,UAAWC,IAAE8B,gBAG1C,qBACE/B,UAAW,CACTuB,EACItB,IAAE+B,eAAiB,IAAM/B,IAAEgC,qBAC3BhC,IAAE+B,gBAERL,QAAS,kBAAMF,GAAgBD,IANjC,SAQE,wBACExB,UAAW,CACTuB,EAAWtB,IAAEiC,QAAU,IAAMjC,IAAEkC,cAAgBlC,IAAEiC,SAFrD,SAMGV,EAAiB,MAAQ,6B,iBCtCrB,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,uCCA1B,MAA0B,wC,iBCanCY,EAAS,CACb,CACEC,IAAKC,EACLC,QAAS,gHACTC,KACE,ijBACFC,YAAa,SAEf,CACEJ,IAAKK,EACLH,QAAS,yDACTC,KAAM,2JACNC,YAAa,QAEf,CACEJ,IAAKM,EACLJ,QAAS,uCACTC,KAAM,qPACNC,YAAa,OAEf,CACEJ,IAAKO,EACLL,QAAS,2EACTC,KAAM,sMACNC,YAAa,WA2EFI,EAvEA,SAAC9C,GACd,OACE,cAAC,IAAD,CACE+C,MAAO,IACPC,2BAA4B,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,UAA7B,OAC1B,qBAAKlD,UAAW,+BAAsCC,IAAEkD,cAAxD,SACE,6BACG,YAAIC,MAAMJ,IAAaK,KAAI,SAACC,EAAGC,GAAJ,OAC1B,oBACEvD,UAAWiD,IAAiBM,EAAM,cAAWC,EAD/C,SAIE,wBACEC,KAAK,SACLC,aAAW,iBACX/B,QAAS,kBAAMuB,EAAUK,IAH3B,SAKE,qBAAKI,MAAM,KAAKC,OAAO,KAAvB,SACE,wBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,WARvBR,WAgBfS,yBAA0B,gBAAGC,EAAH,EAAGA,cAAH,OACxB,wBAAQtC,QAASsC,EAAejE,UAAWC,IAAEiE,aAA7C,SACE,qBAAKC,IAAI,OAAO3D,IAAK4D,OAGzBC,0BAA2B,gBAAGC,EAAH,EAAGA,UAAH,OACzB,wBAAQ3C,QAAS2C,EAAWtE,UAAWC,IAAEiE,aAAzC,SACE,qBAAKC,IAAI,QAAQ3D,IAAK+D,OAG1BZ,MAAM,MACNa,YAAY,EACZC,sBAAuB,CACrBC,mBAAoBzE,IAAE0E,gBACtBC,6BAA8B3E,IAAE4E,oBAChCC,gBAAiB,CACfC,KAAM,QACNC,QAAS,KAEXC,oBAAqBhF,IAAEiF,KA3C3B,SA8CG9C,EAAOiB,KAAI,SAAC8B,EAAQC,GACnB,OACE,sBAAKpF,UAAWC,IAAEoF,WAAlB,UACE,qBAAKrF,UAAWC,IAAEqF,iBAAlB,SACE,qBAAKtF,UAAWC,IAAEsF,UAAWpB,IAAI,SAAS3D,IAAK2E,EAAO9C,QAGxD,sBAAKrC,UAAWC,IAAEuF,cAAlB,UACE,6BAAKL,EAAO5C,UACZ,4BAAI4C,EAAO3C,OACX,wBACExC,UAAWC,IAAEkF,EAAO1C,aADtB,yEAR+B2C,S,mCC3F9B,MAA0B,2CCA1B,MAA0B,2CCA1B,MAA0B,4CC6B1BK,EAtBI,SAAC1F,GAClB,OACE,qBAAKC,UAAWC,IAAEyF,kBAAlB,SACE,qBAAK1F,UAAWC,IAAE0F,oBAAlB,SACE,sBAAK3F,UAAWC,IAAE2F,uBAAlB,UACE,sBAAK5F,UAAWC,IAAE4F,gBAAlB,UACE,mBAAG1E,KAAK,IAAR,8DACA,mBAAGA,KAAK,IAAR,oEACA,mBAAGA,KAAK,IAAR,kDACA,mBAAGA,KAAK,IAAR,yFAEF,sBAAKnB,UAAWC,IAAE6F,YAAlB,UACE,mBAAG3E,KAAK,IAAR,SAAY,cAAC,IAAD,CAAUX,IAAKuF,MAC3B,mBAAG5E,KAAK,IAAR,SAAY,cAAC,IAAD,CAAUX,IAAKwF,MAC3B,mBAAG7E,KAAK,IAAR,SAAY,cAAC,IAAD,CAAUX,IAAKyF,iB,0ECnBjCC,GAAWC,UAAa,CAC5BC,QAAS,8CACTC,QAAS,CACP,8BAA+B,IAC/B,mCAAoC,OACpC,+BAAgC,oCAChC,+BACE,8FACF,+BAAgC,8BAI9BC,GAAkBH,UAAa,CACnCC,QACE,8FACFC,QAAS,CACP,8BAA+B,IAC/B,mCAAoC,OACpC,+BAAgC,oCAChC,+BACE,iGAIOE,GAAgB,WAEzB,OAAOL,GAASM,IAAT,QAAqBC,MAAK,SAACC,GAChC,OAAOA,EAASC,SAHTJ,GAAgB,WAOzB,OAAOL,GAASM,IAAT,SAAsBC,MAAK,SAACC,GACjC,OAAOA,EAASC,SARTJ,GAAgB,WAYzB,OAAOL,GAASM,IAAT,OAAoBC,MAAK,SAACC,GAC/B,OAAOA,EAASC,SAbTJ,GAAgB,WAkBzB,OAAOL,GAASM,IAAT,YAAyBC,MAAK,SAACC,GACpC,OAAOA,EAASC,SAnBTJ,GAAgB,WAwBzB,OAAOL,GAASM,IAAT,QAAqBC,MAAK,SAACC,GAChC,OAAOA,EAASC,SAzBTJ,GAAgB,SA6BjBK,GACR,OAAOV,GAASW,KAAT,QAAuBD,GAAKH,MAAK,SAACC,GACvC,OAAOA,EAASC,SA/BTJ,GAAgB,SAmClBO,GACP,OAAOZ,GAASM,IAAT,gBAAsBM,IAAWL,MAAK,SAACC,GAC5C,OAAOA,EAASC,SArCTJ,GAAgB,SAyCZQ,EAAStG,GACtB,OAAO6F,GACJE,IAAI,GAAI,CACPQ,OAAQ,CACNC,QAAQ,GAAD,OAAKF,EAAL,YAAgBtG,MAG1BgG,MAAK,SAACC,GACL,OAAOA,EAASC,SAjDXJ,GAAgB,SAqDbW,GACZ,OAAOZ,GACJE,IAAI,GAAI,CACPQ,OAAQ,CACNC,QAAQ,GAAD,OAAKC,MAGfT,MAAK,SAACC,GACL,OAAOA,EAASC,SCrFlBQ,GAAa,aACbC,GAAa,aACbC,GAAgB,gBAChBC,GAAuB,uBACvBC,GAAwB,wBACxBC,GAAoB,oBACpBC,GAAa,aACbC,GAAiB,iBACjBC,GAAW,WACXC,GAA0B,0BAE5BC,GAAe,CACjBC,OAAQ,GACRC,OAAQ,GACRC,kBAAkB,EAClBC,sBAAuB,GACvBC,uBAAwB,GACxBC,aAAc,GACdC,OAAQ,GACRC,WAAY,GACZC,KAAM,GACNC,qBAAqB,GAsEVC,GAAuB,SAACC,GAAD,MAAW,CAC7ChF,KAAMmE,GACNa,SAQWC,GAAqB,SAACC,GAAD,MAAY,CAC5ClF,KAAM8D,GACNZ,KAAMgC,IA0EOC,GAzJU,WAAmC,IAAlCC,EAAiC,uDAAzBhB,GAAciB,EAAW,uCACzD,OAAQA,EAAOrF,MACb,KAAK0D,GACH,OAAO,uCACF0B,GACAC,GAFL,IAGEhB,OAAQgB,EAAOnC,OAEnB,KAAKS,GACH,OAAO,uCACFyB,GACAC,GAFL,IAGEf,OAAQe,EAAOnC,OAEnB,KAAKU,GACH,OAAO,uCACFwB,GACAC,GAFL,IAGEd,iBAAkBc,EAAOnC,OAE7B,KAAKW,GACH,OAAO,uCACFuB,GACAC,GAFL,IAGEb,sBAAuBa,EAAOnC,OAElC,KAAKY,GACH,OAAO,uCACFsB,GACAC,GAFL,IAGEZ,uBAAwBY,EAAOnC,OAEnC,KAAKa,GACH,OAAO,uCACFqB,GACAC,GAFL,IAGEX,aAAcW,EAAOnC,OAEzB,KAAKc,GACH,OAAO,uCACFoB,GACAC,GAFL,IAGEV,OAAQU,EAAOnC,OAEnB,KAAKe,GACH,OAAO,uCACFmB,GACAC,GAFL,IAGET,WAAYS,EAAOnC,OAErB,KAAKgB,GACL,OAAO,uCACFkB,GACAC,GAFL,IAGER,KAAMQ,EAAOnC,OAEf,KAAKiB,GACH,OAAO,uCACFiB,GACAC,GAFL,IAGEP,oBAAqBO,EAAOL,OAElC,QACE,OAAOI,ICvFPE,GAAqB,qBACrBC,GAAyB,yBACzBC,GAAwB,wBACxBC,GAAe,eAEjBrB,GAAe,CACjBX,OAAQ,GACRiC,iBAAkB,GAClBC,gBAAiB,IAiDNC,GAAoB,SAACnC,GAAD,MAAa,CAC5CzD,KAAMuF,GACNrC,KAAMO,IAGKoC,GAAqB,SAACvC,GAAD,MAAc,CAC9CtD,KAAMwF,GACNtC,KAAMI,IAsCOwC,GA3FS,WAAmC,IAAlCV,EAAiC,uDAAzBhB,GAAciB,EAAW,uCACxD,OAAQA,EAAOrF,MACb,KAAKsF,GACH,OAAO,uCACFF,GACAC,GAFL,IAGE5B,OAAO,GAAD,mBAAM2B,EAAM3B,QAAZ,CAAoB,CAAEA,OAAQ4B,EAAO5B,YAE/C,KAAK8B,GACH,OAAO,uCACFH,GACAC,GAFL,IAGEK,iBAAkBL,EAAOnC,OAE3B,KAAKsC,GACH,IAAIlC,EAAU,GACRyC,EAAS,aASf,OAPEzC,EADC+B,EAAOnC,KAAK8C,WAAW,kCACdX,EAAOnC,KAAK+C,QAAQ,kCAAU,IAC/BZ,EAAOnC,KAAK8C,WAAW,qDACtBX,EAAOnC,KAAK+C,QAAQ,oDAAa,IAC3BZ,EAAOnC,MACdgD,MAAMH,KACfzC,EAAUA,EAAQ2C,QAAQ,aAAS,gCAE9B,uCACFb,GACAC,GAFL,IAGEM,gBAAiBrC,IAEvB,KAAKmC,GACH,OAAO,uCACFL,GACAC,GAFL,IAGE5B,OAAQ,KAEZ,QACE,OAAO2B,IChDPpB,GAAa,aACbmC,GAAgB,gBAChBC,GAAe,eACfC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAgB,gBAChBC,GAAmB,mBACnBC,GAAoB,oBAEpBC,GAAiB,iBACjBC,GAAe,eACfC,GAAmB,mBAErBxC,GAAe,CACjBO,OAAQ,GACRkC,aAAc,GACdC,MAAO,GACPjC,KAAM,GACNkC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,YAAa,GACbC,SAAU,GACVC,qBAAsB,CACpB,CACEC,GAAI,GACJhK,KAAM,0DACNiK,WAAY,6CACZC,YAAa,OACbC,MAAO,IACPC,SAAS,GAEX,CACEJ,GAAI,GACJhK,KAAM,kFACNiK,WAAY,kFACZC,YAAa,eACbC,MAAO,IACPC,SAAS,GAEX,CACEJ,GAAI,GACJhK,KAAM,gEACNiK,WAAY,gEACZC,YAAa,eACbC,MAAO,KACPC,SAAS,KAiGFC,GAAc,SAACZ,GAAD,MAAY,CACrC9G,KAAMmG,GACNjD,KAAM4D,IAGKa,GAAa,SAAC9C,GAAD,MAAW,CACnC7E,KAAMoG,GACNvB,SAaW+C,GAAiB,iBAAO,CACnC5H,KAAMwG,KAGKqB,GAAc,SAACC,GAAD,MAAW,CACpC9H,KAAMuG,GACNuB,SAGWC,GAAe,SAACD,GAAD,MAAW,CACrC9H,KAAM0G,GACNoB,SAGWE,GAAa,SAACF,GAAD,MAAW,CACnC9H,KAAM2G,GACNmB,SAGWG,GAAkB,SAACC,GAAD,MAAY,CACzClI,KAAMyG,GACNyB,UAiBaC,GAtJM,WAAmC,IAAlC/C,EAAiC,uDAAzBhB,GAAciB,EAAW,uCACrD,OAAQA,EAAOrF,MACb,KAAKgE,GACH,OAAO,uCACFoB,GACAC,GAFL,IAGEV,OAAQU,EAAOnC,OAGnB,KAAKiD,GACH,OAAO,uCACFf,GACAC,GAFL,IAGEyB,MAAOzB,EAAOnC,OAElB,KAAKkD,GACH,OAAO,2BACFhB,GADL,IAEEP,KAAMQ,EAAOR,OAEjB,KAAKwB,GACH,OAAO,2BACFjB,GADL,IAEE2B,OAAQ1B,EAAO0B,SAEnB,KAAKN,GACH,OAAO,uCACFrB,GACAC,GAFL,IAGEwB,aAAcxB,EAAO6C,QAEzB,KAAKxB,GACH,OAAO,uCACFtB,GACAC,GAFL,IAGE2B,UAAW3B,EAAOyC,OAEtB,KAAKnB,GACH,OAAO,uCACFvB,GACAC,GAFL,IAGE4B,QAAS5B,EAAOyC,OAEpB,KAAKvB,GACH,OAAO,uCACFnB,GACAC,GAFL,IAGE8B,SAAU9B,EAAOyC,OAGrB,KAAKxB,GACH,IAAMe,EAAKhC,EAAOgC,GACZe,EAAQhD,EAAMgC,qBAAqBiB,MAAK,SAACC,GAAD,OAAUA,EAAKjB,KAAOA,KACpE,GAAIe,EAAO,CACT,IAAMhB,EAAuBhC,EAAMgC,qBAAqBxH,KAAI,SAAC0I,GAAD,OAC1DA,EAAKjB,KAAOA,EAAZ,2BAESiB,GAFT,IAGMb,SAAUa,EAAKb,UAEjBa,KAEN,OAAO,2BAAKlD,GAAZ,IAAmBgC,yBAEnB,OAAO,eACFhC,GAIT,KAAKoB,GACH,OAAO,2BACFpB,GADL,IAEEgC,qBAAsBhC,EAAMgC,qBAAqBxH,KAAI,SAAC0I,GACpD,OAAO,2BAAKA,GAAZ,IAAkBb,SAAS,SAGjC,KAAKb,GACH,OAAO,uCACFxB,GACAC,GAFL,IAGE6B,YAAa7B,EAAOmC,QAExB,QACE,OAAOpC,ICxIE,OAA0B,mC,qBCY1BmD,GARG,SAACjM,GACjB,OACE,qBAAKC,UAAWC,KAAEgM,iBAAlB,SACE,qBAAKzL,IAAK0L,GAAQ/H,IAAI,Q,6BCkBbgI,GAtBM,SAAC,GAAyD,IAAvDxD,EAAsD,EAAtDA,MAAOyD,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,iBACrD,OACE,oBACEtM,UACE2I,EAAM4D,QAAU,GAAKH,EAASnM,KAAEuM,aAAevM,KAAEwM,iBAFrD,SAKGJ,EAAehJ,KAAI,SAACvC,EAAMgK,GACzB,OACE,oBAEEnJ,QAAS2K,EACTtM,UAAWC,KAAEyM,iBAHf,SAKG5L,EAAKA,MAJDgK,SCbF,OAA0B,wC,iDCA1B,OAA0B,uCCqB1B6B,GAjBE,SAAC5M,GAChB,OACE,qBAAKC,UAAWC,KAAE2M,WAAlB,SACI,cAAC,KAAD,UACE,cAAC,KAAD,CACE/D,MAAO,CACLgE,OAAQ,CAAC,GAAI,IACbC,KAAM,GAERnJ,MAAM,cCiEHoJ,GAxEG,SAAC,GAOZ,IANLC,EAMI,EANJA,sBAGAC,GAGI,EALJ7D,gBAKI,EAJJ8D,aAII,EAHJD,gBACAxM,EAEI,EAFJA,KACAyG,EACI,EADJA,OAEIiG,EAAO,GAEPjG,IACFiG,EAAOjG,EAAO7D,KAAI,SAAC+J,GACjB,OAAOA,EAAElG,OAAOmG,MAAM,SAI1B,IAAMhK,EAAMiK,mBAENC,EAAc,SAACC,EAAaV,GAChCzJ,EAAIoK,QAAQC,UAAUF,EAAaV,IAerC,OAZAa,qBAAU,WACJtK,EAAIoK,SAAWhN,GAAM8M,EAAY,CAACJ,EAAK,GAAG,GAAIA,EAAK,GAAG,OACzD,CAAC1M,IAEJkN,qBAAU,WACJtK,EAAIoK,SAAqC,IAA1BR,EAAeV,SAChCU,EAAiBA,EAAeI,MAAM,KACtCE,EAAY,CAACN,EAAe,GAAIA,EAAe,IAAK,OAErD,CAACA,IAIF,qBAAKjN,UAAWC,KAAE2M,WAAlB,SACqB,IAAlB1F,EAAOqF,OACN,cAAC,KAAD,UACE,cAAC,KAAD,CACEqB,aAAc,CACZf,OAAQ,CAACM,EAAK,GAAG,GAAIA,EAAK,GAAG,IAC7BL,KAAM,IAERnJ,MAAM,OACNkK,YAAaxK,EANf,SAQG8J,EAAK9J,KAAI,SAAC+J,EAAGhI,GACZ,OACE,cAAC,KAAD,CAEE0I,SAAU,CAACV,EAAE,GAAIA,EAAE,IACnBW,QAAS,CACPC,WAAY,gBACZC,cAAeC,GACfC,cAAe,CAAC,GAAI,IACpBC,wBAAwB,GAE1BzM,QAAS,WACNqL,EAAsBI,KATpBhI,UAiBf,cAAC,GAAD,OCPOiJ,gBATS,SAACxF,GAAD,MAAY,CAClCpI,KAAMoI,EAAMyF,UAAUrG,sBACtBE,aAAcU,EAAMyF,UAAUnG,aAC9BjB,OAAQ2B,EAAM0F,SAASrH,OACvBgG,aAAcrE,EAAMyF,UAAUpG,uBAC9B+E,eAAgBpE,EAAM0F,SAASpF,iBAC/BC,gBAAiBP,EAAM0F,SAASnF,mBAGM,CACtCoF,UTOuB,SAACzH,EAAStG,GACjC,8CAAO,WAAOgO,GAAP,eAAAC,EAAA,sEACkBnI,GAA6BQ,EAAStG,GADxD,OACCiG,EADD,OAEL+H,GAtBsBvH,EAwBlBR,EAASA,SAASiI,oBAAoBC,cAAc,GAAGC,UAAUC,MAC9DC,IAzB2B,CACpCtL,KAAMsF,GACN7B,YAkBO,iCApBgB,IAACA,IAoBjB,OAAP,uDSPA8H,kBTkB+B,SAACjI,EAAStG,GACzC,8CAAO,WAAOgO,GAAP,eAAAC,EAAA,sEACkBnI,GAA6BQ,EAAStG,GADxD,OACCiG,EADD,OAEL+H,EACEpF,GACE3C,EAASA,SAASiI,oBAAoBC,cAAc,GAAGC,UAAUC,MAC9DC,MALF,2CAAP,uDSlBAE,WT6BwB,SAAC/H,GACzB,8CAAO,WAAOuH,GAAP,eAAAC,EAAA,sEACkBnI,GAA4BW,GAD9C,OACCR,EADD,OAEL+H,EAASnF,GAAmB5C,EAASA,SAASiI,oBAAoBC,cAAc,GAAGC,UAAU/N,OAFxF,2CAAP,uDS7BA4H,uBAJa2F,EAtDY,SAAC,GAWrB,IAVLY,EAUI,EAVJA,WACAvG,EASI,EATJA,mBACA8F,EAQI,EARJA,UACAQ,EAOI,EAPJA,kBACA7G,EAMI,EANJA,aACAiB,EAKI,EALJA,gBACA6D,EAII,EAJJA,eACAC,EAGI,EAHJA,aACAzM,EAEI,EAFJA,KACAyG,EACI,EADJA,OA0BA,OApBAyG,qBAAU,WACJvE,GACFV,EAAmBU,KAEpB,CAACA,IAEJuE,qBAAU,WACJxF,EAAaoE,OAAS,GACxBpE,EAAa+G,SAAQ,SAACnD,GACpByC,EAAUzC,EAAKjL,KAAML,QAGxB,CAACA,IAEJkN,qBAAU,WACJT,GAAiC,KAAjBA,GAClB8B,EAAkB9B,EAAczM,KAEjC,CAACyM,IAEG,cAAC,GAAD,CACL9D,kBACA6D,iBACAC,eACAzM,OACAyG,SACC8F,sBA9B2B,SAAC9F,GAC7B+H,EAAW/H,S,mBCtBFiI,GAAe,SAACC,GAC3B,IAKIrL,EAAIsL,WAAWD,GAEfE,EAAQC,KAAKC,IAAI,GAPP,GAQdzL,EAAIwL,KAAKE,MAAM1L,EAAIuL,GAASA,EAE5B,IAAII,EAAKC,OAAO5L,GAAG6L,QAVL,GAUsBC,WAAWxC,MAAM,KAEjDyC,EAAIJ,EAAG,GAAGhG,QAAQ,oCAAqC,OAG3D,OADA3F,EAAI2L,EAAG,GAAKI,EAZG,IAYYJ,EAAG,GAAKI,EAXf,IAYCpG,QAAQ,IAAK3F,IAKvBgM,GAAiB,SAACC,GAC7B,OAAIA,EAAQrG,MAAM,UACTqG,EAEH,sCAAN,OAA6CA,I,gCCxB/CC,EAAQ,IAED,IAAMC,GAAiB,SAAC3E,GAE7B,IAAI4E,EAAO,SACPC,EAAQ,SACRC,EAAU,SAEVC,EAAY,GACZC,EAAa,GACbC,EAAe,GA4BnB,OA1BAF,EAAYf,KAAKkB,MAAMlF,EAAKmF,UAC5BnF,EAAKoF,SAASC,KAAOC,SAASV,EAAM,SAEpCI,EAAahF,EAAK6E,QAClB7E,EAAKoF,SAASC,KAAOC,SAAST,EAAO,UAErCI,EAAejF,EAAK8E,UACpB9E,EAAKoF,SAASC,KAAOC,SAASR,EAAS,YAEnCC,EAAY,IACdA,EAAY,GACZH,EAAO,IAGU,IAAfI,IACFA,EAAa,GACbH,EAAQ,IAGW,IAAjBI,IACFA,EAAe,GACfH,EAAU,IAGC,UAAMC,GAAN,OAAkBH,EAAlB,YAA0BI,GAA1B,OAAuCH,EAAvC,YAAgDI,GAAhD,OAA+DH,ICnC9EJ,EAAQ,IAED,IAAMa,GAAY,SAACxI,EAAMsC,EAAUmG,EAAUC,GAClD,IACIC,EAAc,EACdd,EAAO,GACPe,EAAQ,GACRb,EAAU,GAQd,OALAW,EAAU3N,KAAI,SAAC8N,GACTA,EAAMjG,UACR+F,GAAeE,EAAMlG,UAGjB3C,GACN,IAAK,8CAMH,OAJE6H,EAD2B,IAAzBvF,EAASwG,MAAMhB,OAA0C,IAA3BxF,EAASwG,MAAMf,QACxCzF,EAASwG,MAAMjB,KAAO,EACjBvF,EAASwG,MAAMjB,KAGtBhB,GADC4B,EAAmB,KAAPZ,EAAec,GAGrC,IAAK,kFAGF,OAFAC,EAAS3B,KAAK8B,KAAKzG,EAAS0G,cAjBhB,QAmBLnC,GADC4B,EAAoB,KAARG,EAAgBD,GAGvC,IAAK,yDAGD,OAFAZ,EAAUzF,EAAS0G,cArBN,IAuBNnC,GADC4B,EAAsB,EAAVV,EAAeY,KC1B3ChB,EAAQ,IAER,IAoKesB,GApKG,SAAC,GAgBZ,IAfL9Q,EAeI,EAfJA,KACAsG,EAcI,EAdJA,QACAwD,EAaI,EAbJA,MACAjC,EAYI,EAZJA,KACAkJ,EAWI,EAXJA,UACArR,EAUI,EAVJA,QACAsR,EASI,EATJA,QACAT,EAQI,EARJA,UACApG,EAOI,EAPJA,SACAN,EAMI,EANJA,aACAoH,EAKI,EALJA,OACAnJ,EAII,EAJJA,oBACAC,EAGI,EAHJA,qBAEAmJ,GACI,EAFJC,YAEI,EADJD,WA8BA,OA5BIA,GAAkC,IAArBA,EAAUpF,SACzB9L,EAAOkR,EAAUhL,KAAKkL,OAAO/Q,KAC7BiG,EAAU4K,EAAUhL,KAAKmL,QAAQ/K,QACjCuD,EAAaxJ,KAAO6Q,EAAUhL,KAAKoL,MAAMjR,KACzCyJ,EAAQoH,EAAUhL,KAAK4D,MACvBK,EAAWgG,KAAOC,SAChBD,KAAOe,EAAUhL,KAAKqL,QAAQC,KAAKrB,KAAOe,EAAUhL,KAAKuL,YAE3D5J,EAAOqJ,EAAUhL,KAAK6D,OAAO2H,WAAWrR,KACxCkQ,EAAU3N,KAAI,SAAC8N,GACb,OAAIQ,EAAUhL,KAAKyL,YACA,KAAbjB,EAAMrG,GACAqG,EAAMjG,QAAUyG,EAAUhL,KAAKyL,WAGvCT,EAAUhL,KAAK0L,kBACA,KAAblB,EAAMrG,GACAqG,EAAMjG,QAAUyG,EAAUhL,KAAK0L,iBAGvCV,EAAUhL,KAAK2L,cACA,KAAbnB,EAAMrG,GACAqG,EAAMjG,QAAUyG,EAAUhL,KAAK2L,kBAF3C,KAMFhI,EAAayG,SAAWY,EAAUhL,KAAKoL,MAAMhB,UAG7C,sBAAK/Q,UAAWC,KAAEsS,iBAAlB,UACE,sBAAMvS,UAAWC,KAAEuS,cAAnB,gEACA,+BACE,+BACE,qBAAKxS,UAAS,UAAKC,KAAEwS,OAAP,YAAiBxS,KAAEyS,aAAjC,iFACA,qBAAK1S,UAAWC,KAAE0S,cAClB,qBAAK3S,UAAWC,KAAE2S,iBAAlB,SACGnS,GAAQsG,GACP,qCACE,uBAAM/G,UAAWC,KAAE4S,cAAnB,UAAmCpS,EAAnC,OACA,+BAAOsG,YAKduD,EAAaxJ,MACZ,+BACE,qBAAKd,UAAWC,KAAEwS,OAAlB,kDACA,wBACA,qBAAKzS,UAAS,UAAKC,KAAE2S,iBAAP,YAA2B3S,KAAE6S,UAA3C,SACE,+BAAOxI,EAAaxJ,YAIzByJ,GACC,+BACE,qBAAKvK,UAAWC,KAAEwS,OAAlB,sCACA,wBACA,qBAAKzS,UAAS,UAAKC,KAAE2S,iBAAP,YAA2B3S,KAAE6S,UAA3C,SACE,+BAAOvI,EAAM,GAAGwI,cAAgBxI,EAAMyI,MAAM,UAI7B,IAApBpI,EAAS2B,QACR,+BACE,qBAAKvM,UAAWC,KAAEwS,OAAlB,2HACA,wBACA,qBAAKzS,UAAS,UAAKC,KAAE2S,iBAAP,YAA2B3S,KAAE6S,UAA3C,SACE,+BAAO5C,GAAetF,UAI3BtC,GACC,+BACE,qBAAKtI,UAAWC,KAAEwS,OAAlB,4CACA,wBACA,qBAAKzS,UAAS,UAAKC,KAAE2S,iBAAP,YAA2B3S,KAAE6S,UAA3C,SACE,+BAAOxK,SAKZ0I,EAAU3N,KAAI,YAA4B,IAAzBvC,EAAwB,EAAxBA,KAAMgK,EAAkB,EAAlBA,GACtB,GADwC,EAAdI,QAExB,OACE,+BACE,qBAAKlL,UAAWC,KAAEwS,OAAlB,SAA2B3R,IAC3B,wBACA,qBAAKd,UAAS,UAAKC,KAAE2S,iBAAP,YAA2B3S,KAAE6S,UAA3C,SACE,oDAJKhI,SAWP,KAATxC,GAAesC,GACd,sBAAK5K,UAAWC,KAAEgT,WAAlB,UACE,sBAAMjT,UAAWC,KAAEgL,MAAnB,wCACA,uBAAMjL,UAAWC,KAAEiT,YAAnB,UACGpC,GAAUxI,EAAMsC,EAAUN,EAAayG,SAAUC,GADpD,gBAKH1G,EAAayG,UAAYzG,EAAa6I,UACrC,sBACEnT,UACEsI,GAAQsC,EAAR,UACO3K,KAAEgT,WADT,YACuBhT,KAAEmT,gBACrBnT,KAAEgT,WAJV,UAOE,sBAAMjT,UAAWC,KAAEgL,MAAnB,wCACA,uBAAMjL,UAAWC,KAAEiT,YAAnB,0BACM/D,GAAa7E,EAAayG,UADhC,gBAC8C,IAC3C5B,GAAa7E,EAAa6I,UAF7B,gBAOHxB,GAAkC,IAArBA,EAAUpF,OACtB,wBAAQvM,UAAS,UAAKC,KAAEoT,aAAP,YAAuBpT,KAAEqT,QAA1C,8DACE,KACH5B,EACC,wBACE1R,UACwB,IAArB2R,EAAUpF,OACPtM,KAAEsT,QACFtT,KAAEoT,aAER1R,QAAS,kBAAM6G,GAAsBD,IANvC,8DAWA,cAAC,IAAD,CACEvH,GAAI,2BAA6ByQ,EACjCzR,UACEwR,EAAS,UAAMvR,KAAEoT,aAAR,YAAwBpT,KAAEuT,UAAavT,KAAEoT,aAHtD,SAMGlT,QCrGIkO,gBAbS,SAACxF,GAAD,MAAY,CAClCpI,KAAMoI,EAAMyF,UAAUrG,sBACtBlB,QAAS8B,EAAMyF,UAAUpG,uBACzBqC,MAAO1B,EAAM8C,MAAMpB,MACnBjC,KAAMO,EAAM8C,MAAMrD,KAClB0I,UAAWnI,EAAM8C,MAAMd,qBACvBD,SAAU/B,EAAM8C,MAAMf,SACtBN,aAAczB,EAAM8C,MAAMrB,aAC1B/B,oBAAqBM,EAAMyF,UAAU/F,oBACrCqJ,YAAa/I,EAAM4K,QAAQ7B,YAC3BD,UAAW9I,EAAM4K,QAAQ9B,aAGa,CACtCnJ,wBACAkL,ebwH4B,SAACzI,GAAD,MAAY,CACxCxH,KAAM4G,GACNY,Wa5HaoD,EA5DY,SAAC,GAiBrB,IAhBL5N,EAgBI,EAhBJA,KACAsG,EAeI,EAfJA,QACAwD,EAcI,EAdJA,MACAjC,EAaI,EAbJA,KACAkJ,EAYI,EAZJA,UACArR,EAWI,EAXJA,QACAsR,EAUI,EAVJA,QACAC,EASI,EATJA,OACAV,EAQI,EARJA,UACApG,EAOI,EAPJA,SACAN,EAMI,EANJA,aACA/B,EAKI,EALJA,oBACAC,EAII,EAJJA,qBACAkL,EAGI,EAHJA,eACA9B,EAEI,EAFJA,YACAD,EACI,EADJA,UAQA,OANAhE,qBAAU,WACJrF,GAAQsC,GAAYN,EAAayG,UAAYC,GAC/C0C,EACE5C,GAAUxI,EAAMsC,EAAUN,EAAayG,SAAUC,MAEpD,CAAC1I,EAAMsC,EAAUoG,IAElB,cAAC,GAAD,CAEIvQ,OACAsG,UACAwD,QACAjC,OACAkJ,YACArR,UACAsR,UACAC,SACAV,YACApG,WACAN,eACA/B,sBACAC,uBACAoJ,cACAD,iBC0MOgC,GAjPU,SAAC,GAoBnB,IAnBL7L,EAmBI,EAnBJA,OACAC,EAkBI,EAlBJA,OACA6L,EAiBI,EAjBJA,aACAC,EAgBI,EAhBJA,eACAC,EAeI,EAfJA,gBACAC,EAcI,EAdJA,gBACArL,EAaI,EAbJA,mBACAsL,EAYI,EAZJA,kBACAC,EAWI,EAXJA,kBACAC,EAUI,EAVJA,YACA5K,EASI,EATJA,mBACAD,EAQI,EARJA,kBACA8B,EAOI,EAPJA,YACAG,EAMI,EANJA,YACAF,EAKI,EALJA,WACAC,EAII,EAJJA,eACAK,EAGI,EAHJA,gBACAF,EAEI,EAFJA,aACAC,EACI,EADJA,WACI,EACyC0I,mBAASN,GADlD,mBACGO,EADH,KACsBC,EADtB,OAE2CF,mBAASL,GAFpD,mBAEGQ,EAFH,KAEuBC,EAFvB,OAIFJ,oBAAS,GAJP,mBAGGK,EAHH,KAGgCC,EAHhC,OAMFN,oBAAS,GANP,mBAKGO,EALH,KAKiCC,EALjC,KASEC,EAAiB9M,EAAOnB,KAAKkO,QAAO,YACxC,OADsD,EAAX/T,KAC/BgU,cAAcC,SAASX,EAAkBU,kBAInDE,EAAiB,GACrBjN,EAAOpB,KAAKkO,QAAO,YAA0B,IAAvBhD,EAAsB,EAAtBA,OAAQ9K,EAAc,EAAdA,QACd,MAAV8K,GAAkBA,EAAO/Q,OAASsT,GACpCY,EAAeC,KAAKlO,MAGxB,IACMmO,EAAQF,EAAe3R,KAAI,SAAC0I,GAAD,uBADlB,OACyCA,EAAK8D,eAC7DkE,EAAgBmB,GA2BhBvH,qBAAU,WAEa,KAAnBkG,GACAO,IAAsBP,GACF,KAApBC,GAEAG,GAAkB,KACnB,CAACH,IAsFJ,OACE,qBAAK9T,UAAWC,KAAEkV,wBAAlB,SACE,sBAAKnV,UAAWC,KAAEmV,kBAAlB,UACE,sBAAKpV,UAAWC,KAAEoV,0BAA2B1T,QArD1B,WACvB8S,GAA+B,GAC/BE,GAAgC,IAmD5B,UACE,sBAAK3U,UAAWC,KAAEqV,cAAe3T,QAAS,SAAC2B,GAAD,OAAOA,EAAEiS,mBAAnD,UACE,sBAAKvV,UAAWC,KAAEuV,aAAlB,UACE,mEACA,sBAAKxV,UAAWC,KAAEwV,WAAlB,UACE,uBACEhS,KAAK,OACL3C,KAAK,OACL6H,MAAOyL,EACPsB,YAAY,uHACZC,aAAa,MACbC,SAAU,SAACC,GAAD,OAAWxB,EAAgBwB,EAAMC,OAAOnN,QAClDhH,QAtHc,WAC5B8S,GAA+B,IAsHjBsB,UA7DQ,SAACzS,GACvB,IAAI0S,EAAQ,EACM,IAAd1S,EAAE2S,WACJD,IACc5B,EAAkB7H,SAC9B0H,GAAkB,GAClBC,IACAxI,EAAgB,IAChBsI,EAAkB,IAClBtL,EAAmB,IACnB2L,EAAgB,IAChBE,EAAiB,IACjBjL,EAAmB,IACnBD,EAAkB,IAClB8B,EAAY,IACZG,EAAY,IACZF,EAAW,IACXC,IACAG,EAAa,IACbC,EAAW,QA4CH,wBACE9J,QAtGY,WAC1BsS,GAAkB,GAClBC,IACAF,EAAkB,IAClBtL,EAAmB,IACnBgD,EAAgB,IAChB2I,EAAgB,IAChBE,EAAiB,IACjBjL,EAAmB,IACnBD,EAAkB,IAClB8B,EAAY,IACZG,EAAY,IACZF,EAAW,IACXC,IACAG,EAAa,IACbC,EAAW,KAwFGzL,UAAWC,KAAEiW,cAFf,SAIE,cAAC,IAAD,CAAU1V,IAAK2V,aAKrB,cAAC,GAAD,CACE9J,eAAgBuI,EAChBtI,iBAlJ6B,SAAChJ,GACxC+Q,EAAgB/Q,EAAEwS,OAAOM,aACzBpC,EAAkB1Q,EAAEwS,OAAOM,aAC3B3B,GAAgCD,IAgJtB7L,MAAOyL,EACPhI,OAAQoI,EACR6B,QAAS5B,OAGb,sBAAKzU,UAAWC,KAAEqV,cAAe3T,QAAS,SAAC2B,GAAD,OAAOA,EAAEiS,mBAAnD,UACE,sBAAKvV,UAAWC,KAAEuV,aAAlB,UACE,wGACA,sBAAKxV,UAAWC,KAAEwV,WAAlB,UACE,uBACEhS,KAAK,OACL3C,KAAK,QACL6H,MAAO2L,GAAsBR,EAC7B4B,YAAY,0HACZC,aAAa,MACbC,SAAU,SAACC,GAAD,OAAWtB,EAAiBsB,EAAMC,OAAOnN,QACnDhH,QAhJe,WAC7BgT,GAAgC,IAgJlBoB,UApES,SAACzS,GACxB,IAAI0S,EAAQ,EACM,IAAd1S,EAAE2S,WACJD,IACc1B,EAAmB/H,SAC/B0H,GAAkB,GAClBvI,EAAgB,IAChBhD,EAAmB,IACnB6L,EAAiB,IACjBjL,EAAmB,IACnBD,EAAkB,IAClB8B,EAAY,IACZG,EAAY,IACZF,EAAW,IACXC,IACAG,EAAa,IACbC,EAAW,QAsDH,wBACE9J,QAnHa,WAC3BsS,GAAkB,GAClBvI,EAAgB,IAChBhD,EAAmB,IACnB6L,EAAiB,IACjBjL,EAAmB,IACnBD,EAAkB,IAClB8B,EAAY,IACZG,EAAY,IACZF,EAAW,IACXC,IACAG,EAAa,IACbC,EAAW,KAwGGzL,UAAWC,KAAEiW,cAFf,SAIE,cAAC,IAAD,CAAU1V,IAAK2V,aAIrB,cAAC,GAAD,CACE9J,eAAgB6I,EAChB5I,iBAzK8B,SAAChJ,GACzCiR,EAAiBjR,EAAEwS,OAAOM,aAC1B1N,EAAmBpF,EAAEwS,OAAOM,aAC5BzB,GAAiCD,IAuKvB/L,MAAO2L,EACPlI,OAAQsI,OAGZ,sBAAK1U,UAAWC,KAAEqW,aAAlB,UACE,4HACA,cAAC,GAAD,UAIJ,cAAC,GAAD,CACEnW,QAAQ,kFACRqR,UAAWoC,EACXnC,QAAQ,gBCpJHpD,gBAVS,SAACxF,GAAD,MAAY,CAClCf,OAAQe,EAAMyF,UAAUxG,OACxBC,OAAQc,EAAMyF,UAAUvG,OACxBwG,SAAU1F,EAAM0F,SAASgI,YACzB3C,aAAc/K,EAAMyF,UAAUtG,iBAC9B6L,eAAgBhL,EAAMyF,UAAUrG,sBAChC6L,gBAAiBjL,EAAMyF,UAAUpG,uBACjCkB,gBAAiBP,EAAM0F,SAASnF,mBAGM,CACtCoN,sBjB8CmC,WACnC,8CAAO,WAAO/H,GAAP,eAAAC,EAAA,sEACkBnI,KADlB,OACCG,EADD,OAEL+H,EAjCkC,CACpChL,KAAM0D,GACNR,KA+BqBD,IAFd,2CAAP,uDiB9CA+P,sBjBoDmC,WACnC,8CAAO,WAAOhI,GAAP,eAAAC,EAAA,sEACkBnI,KADlB,OACCG,EADD,OAEL+H,EAnCkC,CACpChL,KAAM2D,GACNT,KAiCqBD,IAFd,2CAAP,uDiBpDAuN,kBjBwB+B,SAACxL,GAAD,MAAW,CAC1ChF,KAAM4D,GACNV,KAAM8B,IiBzBNuL,kBjBF+B,SAACrL,GAAD,MAAY,CAC3ClF,KAAM6D,GACNX,KAAMgC,IiBCND,sBACAqL,gBjBM6B,SAAC2C,GAAD,MAAe,CAC5CjT,KAAM+D,GACNb,KAAM+P,IiBPNxC,YhBlCyB,iBAAO,CAChCzQ,KAAMyF,KgBkCNI,sBACAD,qBACA8B,eACAG,eACAF,cACAC,kBACAK,mBACAF,gBACAC,eAhBa4C,EAxEmB,SAAC,GAsB5B,IArBLmI,EAqBI,EArBJA,sBACAC,EAoBI,EApBJA,sBACA3O,EAmBI,EAnBJA,OACAC,EAkBI,EAlBJA,OACA6L,EAiBI,EAjBJA,aACAC,EAgBI,EAhBJA,eACAC,EAeI,EAfJA,gBACAC,EAcI,EAdJA,gBACAC,EAaI,EAbJA,kBACAC,EAYI,EAZJA,kBACAC,EAWI,EAXJA,YACAxL,EAUI,EAVJA,mBACAY,EASI,EATJA,mBACAD,EAQI,EARJA,kBACA8B,EAOI,EAPJA,YACAG,EAMI,EANJA,YACAF,EAKI,EALJA,WACAC,EAII,EAJJA,eACAK,EAGI,EAHJA,gBACAF,EAEI,EAFJA,aACAC,EACI,EADJA,WASA,OAPAkC,qBAAU,WACR6I,IACAC,MACC,IAEH9I,qBAAU,cAAU,CAACmG,IAEhBhM,GAA4B,IAAlBA,EAAOyE,QAAiBxE,GAA4B,IAAlBA,EAAOwE,OAItD,mCACE,cAAC,GAAD,CAEIzE,SACAC,SACA6L,eACAC,iBACAC,kBACAC,kBACArL,qBACAsL,oBACAC,oBACAC,cACA5K,qBACAD,oBACA8B,cACAG,cACAF,aACAC,iBACAK,kBACAF,eACAC,iBAxBC,cAAC,GAAD,O,oBCeIkL,GAjEO,SAAC,GAQhB,IAPL/C,EAOI,EAPJA,aACAtJ,EAMI,EANJA,aACAC,EAKI,EALJA,MACAjC,EAII,EAJJA,KACAsC,EAGI,EAHJA,SACAgH,EAEI,EAFJA,YACAD,EACI,EADJA,UAKA,OAHGA,GAAaA,EAAUpF,SACxBqF,EAAYjL,KAAKmE,GAAK6G,EAAUhL,KAAKmE,IAGrC,qBAAK9K,UAAWC,KAAE2W,kBAAlB,SACE,qBAAK5W,UAAWC,KAAE4W,oBAAlB,SACGlF,GAAkC,IAArBA,EAAUpF,OACtB,sBAAKvM,UAAWC,KAAEuS,cAAlB,6EACiBb,EAAUhL,KAAKmE,MAGhC,qCACE,qBAAK9K,UAAWC,KAAE6W,UAAlB,SACE,cAAC,IAAD,CAAS9V,GAAG,2BAAZ,oGAGF,qBAAKhB,UAAWC,KAAE6W,UAAlB,SACE,eAAC,IAAD,CACE9V,GAAG,gCACHhB,UAAW4T,EAAe3T,KAAEuT,SAAW,GAFzC,iDAIS,SAIX,qBAAKxT,UAAWC,KAAE6W,UAAlB,SACE,cAAC,IAAD,CACE9V,GAAG,uCACHhB,UAAYsK,EAAaxJ,KAAoB,GAAbb,KAAEuT,SAFpC,8FAQF,qBAAKxT,UAAWC,KAAE6W,UAAlB,SACE,cAAC,IAAD,CACE9V,GAAG,sCACHhB,WACG4K,GACa,KAAbA,IAAoBL,GACV,KAAVA,IAAiBjC,GACT,KAATA,EACIrI,KAAEuT,SACF,GARR,sDCrBCnF,gBAVS,SAACxF,GAAD,MAAY,CAClC+K,aAAc/K,EAAMyF,UAAUtG,iBAC9BsC,aAAczB,EAAM8C,MAAMrB,aAC1BC,MAAO1B,EAAM8C,MAAMpB,MACnBjC,KAAMO,EAAM8C,MAAMrD,KAClBsC,SAAU/B,EAAM8C,MAAMf,SACtBgH,YAAa/I,EAAM4K,QAAQ7B,YAC3BD,UAAW9I,EAAM4K,QAAQ9B,aAGZtD,EAxBgB,SAAC,GAQzB,IAPLuF,EAOI,EAPJA,aACAtJ,EAMI,EANJA,aACAC,EAKI,EALJA,MACAjC,EAII,EAJJA,KACAsC,EAGI,EAHJA,SACAgH,EAEI,EAFJA,YACAD,EACI,EADJA,UAEA,OACE,cAAC,GAAD,CAAqBiC,eAActJ,eAAcC,QAAOjC,OAAMsC,WAASgH,cAAaD,iB,oBC8BzEoF,GAzCI,SAAC,GAOb,IANLC,EAMI,EANJA,UACAlM,EAKI,EALJA,GACAmM,EAII,EAJJA,iBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAEA,OACE,sBAAKpX,UAAWC,KAAEoX,gBAAlB,UACE,uBACE5T,KAAK,QACLzD,UAAWC,KAAEqX,SACb3O,MAAOqO,EACPlM,GAAIA,EACJI,QAAS+L,IAAqBD,EAC9BpB,SAAUsB,IAEXC,GAAaC,EACZ,wBACEG,QAASzM,EACT9K,UACEiX,IAAqBD,EAAY/W,KAAEuX,UAAnC,UAAkDvX,KAAEuX,UAApD,YAAiEvX,KAAEwX,gBAHvE,UAMGT,EANH,KAMgBG,EANhB,UAM6BC,KAG7B,uBACEG,QAASzM,EACT9K,UACEiX,IAAqBD,EAAY/W,KAAEuX,UAAnC,UAAkDvX,KAAEuX,UAApD,YAAiEvX,KAAEwX,gBAHvE,SAMGT,EAAU,GAAGjE,cAAgBiE,EAAUhE,MAAM,S,oBCuEzC0E,GArGO,SAAC,GAYhB,IAXLtP,EAWI,EAXJA,OACA+C,EAUI,EAVJA,YACA9C,EASI,EATJA,WAEAiD,GAOI,EARJqM,UAQI,EAPJrM,aACAF,EAMI,EANJA,WACAC,EAKI,EALJA,eACAK,EAII,EAJJA,gBACApB,EAGI,EAHJA,aACAkB,EAEI,EAFJA,aACAC,EACI,EADJA,WACI,EACqC0I,mBAAS,2DAD9C,mBACGyD,EADH,KACqBC,EADrB,KAEEX,EAAe,SAAC5T,GACpBuU,EAAavU,EAAEwS,OAAOnN,QAGpBmP,EAAe,GACnB1P,EAAOzB,KAAKkO,QAAO,SAACkD,IACO,4DAArBH,GAEOG,EAAEC,WAAWlX,OAAS8W,IAD/BE,EAAa7C,KAAK8C,MAgBtB,OACE,qBAAK/X,UAAWC,KAAEgY,iBAAlB,SACE,sBAAKjY,UAAWC,KAAEiY,mBAAlB,UACE,sBAAKlY,UAAWC,KAAEkY,eAAlB,UACE,sBAAKnY,UAAWC,KAAEmY,kBAAlB,UACE,cAAC,GAAD,CACEtN,GAAI,EACJkM,UAAU,0DACVC,iBAAkBW,EAClBV,aAAcA,IAEf7O,EAAW1B,KAAKtD,KAAI,YAAmB,IAAhByH,EAAe,EAAfA,GAAIhK,EAAW,EAAXA,KAC1B,OACE,cAAC,GAAD,CAEEgK,GAAIA,EACJkM,UAAWlW,EACXmW,iBAAkBW,EAClBV,aAAcA,GAJTpM,SASb,qBAAK9K,UAAWC,KAAEoY,sBAAlB,SACGP,EAAazU,KAAI,SAACiV,GAAS,IACnBxN,EAA2CwN,EAA3CxN,GAAUiG,GAAiCuH,EAAvCxX,KAAuCwX,EAAjCvH,UAAUoC,EAAuBmF,EAAvBnF,SAAUoF,EAAaD,EAAbC,UACrC,OACE,yBAEEvY,UAAWC,KAAEuY,cACb7W,QAAS,kBAxCC,SAAC2W,GACzB5M,EAAgB4M,GAChBnN,EAAY,IACZG,EAAY,IACZF,EAAW,IACXC,IACAG,EAAa,IACbC,EAAW,IAiCkBgN,CAAkBH,IAHnC,UAKE,sBAAKtY,UAAWC,KAAEyY,QAAlB,UACE,sBAAM1Y,UAAWC,KAAE0Y,aAAnB,SACGL,EAAIxX,KAAKiS,gBAEZ,uBAAM/S,UAAWC,KAAE2Y,cAAnB,UACGzJ,GAAa4B,GADhB,KAC6B,IAC1B5B,GAAagE,GAFhB,gBAKF,qBACEnT,UAAWC,KAAE4Y,OACbC,MAAO,CACLC,gBAAgB,OAAD,OAAShJ,GACtBwI,EAAUS,MADG,UAhBdlO,WA0Bf,cAAC,GAAD,CACE3K,QAAQ,iFACRqR,WAAYlH,EAAaxJ,KACzB2Q,QAAQ,uBC/BHpD,gBANS,SAACxF,GAAD,MAAY,CAClCT,OAAQS,EAAM8C,MAAMvD,OACpBC,WAAYQ,EAAMyF,UAAUjG,WAC5BiC,aAAczB,EAAM8C,MAAMrB,gBAGY,CACtC2O,QpB2HqB,WACrB,8CAAO,WAAOxK,GAAP,eAAAC,EAAA,sEACkBnI,KADlB,OACCG,EADD,OAEL+H,EAzD8B,CAChChL,KAAMgE,GACNd,KAuDmBD,IAFZ,2CAAP,uDoB3HAwS,ctB4F2B,WAC3B,8CAAO,WAAOzK,GAAP,eAAAC,EAAA,sEACkBnI,KADlB,OACCG,EADD,OAEL+H,EAlC0C,CAC5ChL,KAAMiE,GACNf,KAgCyBD,IAFlB,2CAAP,uDsB5FAyE,eACAG,eACAF,cACAC,kBACAK,mBACAF,gBACAC,eATa4C,EArDgB,SAAC,GAczB,IAbL6K,EAaI,EAbJA,cACAD,EAYI,EAZJA,QACA7Q,EAWI,EAXJA,OACA+C,EAUI,EAVJA,YACA9C,EASI,EATJA,WACAsP,EAQI,EARJA,UACArM,EAOI,EAPJA,YACAF,EAMI,EANJA,WACAC,EAKI,EALJA,eACAK,EAII,EAJJA,gBACApB,EAGI,EAHJA,aACAkB,EAEI,EAFJA,aACAC,EACI,EADJA,WAOA,OALAkC,qBAAU,WACRuL,IACAD,MACC,IAGA7Q,GACiB,IAAlBA,EAAOmE,QACNlE,GACqB,IAAtBA,EAAWkE,OAKX,cAAC,GAAD,CAEInE,SACA+C,cACA9C,aACAsP,YACArM,cACAF,aACAC,iBACAK,kBACApB,eACAkB,eACAC,eAfG,cAAC,GAAD,O,+ECfI0N,GAzBO,SAAC,GAOhB,IANLnC,EAMI,EANJA,UACAlM,EAKI,EALJA,GACAG,EAII,EAJJA,MACAiM,EAGI,EAHJA,aAEAhM,GACI,EAFJ+L,iBAEI,EADJ/L,SAEA,OACE,sBAAKlL,UAAWC,KAAEoX,gBAAlB,UACE,uBACE5T,KAAK,WACLzD,UAAWC,KAAEmZ,cACbzQ,MAAOqO,EACPqC,eAAgBnO,EAChBJ,GAAIA,EACJnJ,QAAS,SAACkU,GAAD,OAAWqB,EAAarB,EAAO/K,MAE1C,wBAAO9K,UAAWC,KAAEqZ,cAAe/B,QAASzM,EAA5C,UACGkM,EADH,KACgB/L,EADhB,gBCNNgF,EAAQ,IAER,IAyOesJ,GAzOI,SAAC,GAiBd,EAhBJC,KAgBK,IAfLlR,EAeI,EAfJA,KACAiC,EAcI,EAdJA,MACAY,EAaI,EAbJA,YACAC,EAYI,EAZJA,WACA4F,EAWI,EAXJA,UACAyI,EAUI,EAVJA,aACAnO,EASI,EATJA,YACAhB,EAQI,EARJA,aACAM,EAOI,EAPJA,SACA8O,EAMI,EANJA,UACAC,EAKI,EALJA,eACAC,EAII,EAJJA,aACApO,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAoO,EACI,EADJA,aAEAC,0BAAe,KAAMC,MACrBnJ,KAAOoJ,OAAO,MACd,IAHI,EAK6B7F,mBAAS5J,GALtC,mBAKG0P,EALH,KAKiBC,EALjB,KAMEC,EAAoB,SAAC7W,GACzB4W,EAAS5W,EAAEwS,OAAOnN,OAClBwC,EAAY7H,EAAEwS,OAAOnN,QARnB,EAW2BwL,mBAASuF,GAXpC,mBAWGU,EAXH,KAWgBC,EAXhB,OAkB0BlG,mBAAS,IAlBnC,mBAkBGmG,EAlBH,KAkBcC,EAlBd,KAmBEC,EAAqB,SAAClX,EAAGwH,GAC7ByP,EAASjX,EAAEwS,OAAOnN,OAClB8Q,EAAagB,SAAS3P,KArBpB,EAwBiCqJ,mBAASwF,GAxB1C,mBAwBGlP,EAxBH,KAwBciQ,EAxBd,OAyB6BvG,mBAASyF,GAzBtC,mBAyBGlP,EAzBH,KAyBYiQ,EAzBZ,KAsDJhN,qBAAU,WACR,GAAIlD,GAAaC,EAAS,CACxB,IAAMuH,EAAOrB,KAAOC,SAASD,KAAOlG,GAASuH,KAAKrB,KAAOnG,KACzDa,EAAY2G,MAEb,CAACxH,EAAWC,IA3DX,MA6DmCyJ,oBAAS,GA7D5C,mBA6DGyG,EA7DH,KA6DsBtZ,EA7DtB,KA+DJqM,qBAAU,YACJlD,GAA2B,KAAdA,IAAkBnJ,GAAU,KAC5C,CAACmJ,IAEJ,IAnEI,EAwEwB0J,oBAAS,GAxEjC,mBAwEG0G,EAxEH,KAwEWC,EAxEX,KA6EJ,OAJAnN,qBAAU,WACU,KAAd+L,GAA8B,KAAVnP,GAA6B,KAAbK,GAAiBkQ,GAAU,KAClE,CAACvQ,EAAOmP,EAAW9O,IAGpB,qBAAK5K,UAAWC,KAAE8a,sBAAlB,SACE,sBAAK/a,UAAWC,KAAE+a,wBAAlB,UACE,sBAAKhb,UAAWC,KAAE4K,qBAAlB,UACE,qBAAK7K,UAAWC,KAAEgb,gBAAlB,SACkC,IAA/B3Q,EAAa4Q,OAAO3O,OACnB,cAAC,GAAD,CACEzB,GAAI,GACJkM,UAAU,iCACVC,iBAAkBgD,EAClB/C,aAAciD,IAGhB,qCACE,4DACA,sBACEna,UAAS,UAAKC,KAAEmY,kBAAP,YAA4BnY,KAAEkb,sBADzC,UAGE,cAAC,GAAD,CACErQ,GAAI,GACJkM,UAAU,iCACVC,iBAAkBgD,EAClB/C,aAAciD,IAEf7P,EAAa4Q,OACV5Q,EAAa4Q,OAAO7X,KAAI,SAACkH,EAAOnF,GAC9B,OACE,cAAC,GAAD,CAEE0F,GAAI1F,EACJuD,MAAOsR,GAAgB1P,EACvByM,UAAWzM,EACX0M,iBAAkBgD,EAClB/C,aAAciD,GALT/U,MASX,aAKZ,sBAAKpF,UAAWC,KAAEgb,gBAAlB,UACE,iGACA,sBAAKjb,UAAS,UAAKC,KAAEmb,gBAAP,YAA0Bnb,KAAEkb,sBAA1C,UACE,sBAAKnb,UAAWC,KAAEob,iBAAlB,UACE,2CACA,sBAAKrb,UAAWC,KAAEqb,eAAlB,UACE,cAAC,KAAD,CACEC,gBAAgB,4GAChBvB,OAAO,KACPwB,qBAAsBC,KAAUvF,cAChCwF,SAAUjR,EACVkR,QAAS,IAAIC,KACbhG,SAAU,SAACrK,GAAD,OAxGJ,SAACA,GACvBmP,EAAgBnP,GAChBC,EAAaD,GACbD,EAAY,IACZhK,GAAU,GACVqZ,EAAc,IAmGsBkB,CAAgBtQ,IACpCuQ,gBAAc,EACdC,WAAW,qBAEb,wBACE/b,UAAWyb,KAAUvF,cACrBvU,QAjGc,WAC9B+Y,EAAgB,IAChBC,EAAc,IACdlP,EAAW,IACXD,EAAa,IACbF,EAAY,KA0FE,SAIE,cAAC,IAAD,CAAU9K,IAAK2V,aAIrB,sBAAKnW,UAAWC,KAAEob,iBAAlB,UACE,iDACA,sBAAKrb,UAAWC,KAAEqb,eAAlB,UACE,cAAC,KAAD,CACEC,gBAAgB,4GAChBvB,OAAO,KACP0B,SAAUhR,EACViR,QAASlR,EACTuR,WApFO,SAACC,GACxB,IAAMC,EAAe,IAAIN,KAAKK,GAC9B,OAAOxR,EAAU0R,UAAYD,EAAaC,WAmF1B3I,SAAUoH,EACVhF,SAAU,SAACrK,GAAD,OAtHN,SAACA,GACrBoP,EAAcpP,GACdE,EAAWF,GAoHyB6Q,CAAc7Q,IAClCuQ,gBAAc,EACdC,WAAW,sBAEb,wBACE/b,UAAWyb,KAAUvF,cACrBvU,QA/GY,WAC5BgZ,EAAc,IACdlP,EAAW,IACXH,EAAY,KA0GE,SAIE,cAAC,IAAD,CAAU9K,IAAK2V,mBAOzB,sBAAKnW,UAAWC,KAAEgb,gBAAlB,UACE,sBAAMjb,UAAS,UAAKC,KAAEkb,sBAAtB,4CACA,qBAAKnb,UAAWC,KAAEoc,sBAAlB,SACG/T,EAAK3B,KAAKtD,KAAI,YAAgC,IAA7B8O,EAA4B,EAA5BA,WAAYrH,EAAgB,EAAhBA,GAAIG,EAAY,EAAZA,MAChC,OACE,cAAC,GAAD,CAEEH,GAAIqH,EAAWrH,GACfnC,MAAOyR,GAAejI,EAAWrR,KACjCkW,UAAW7E,EAAWrR,KACtBmW,iBAAkBmD,EAClBlD,aAAc,SAACrB,GAAD,OAvKNvS,EAuKkCuS,EAvK/ByG,EAuKsCnK,EAAWrR,KAvKvC0J,EAuK6CM,EAtKlFuP,EAAQ/W,EAAEwS,OAAOnN,OACjByC,EAAWkR,QACXzC,EAAarP,GAHU,IAAClH,EAAGgZ,EAAU9R,GAwKrB2M,UAAWlM,EACXmM,SAAUjF,EAAWoK,MAPhBpK,EAAWrH,YAc1B,sBAAK9K,UAAWC,KAAEgb,gBAAlB,UACE,sBAAMjb,UAAS,UAAKC,KAAEkb,sBAAtB,qEACA,qBACEnb,UAAS,UAAKC,KAAEmY,kBAAP,YAA4BnY,KAAEuc,gCADzC,SAGGxL,EAAU3N,KAAI,YAAmC,IAAhCyH,EAA+B,EAA/BA,GAAIhK,EAA2B,EAA3BA,KAAMmK,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACjC,OACE,cAAC,GAAD,CAEEJ,GAAIA,EACJI,QAASA,EACT8L,UAAWlW,EACXmK,MAAOA,EACPiM,aAAcsD,EACdvD,iBAAkBqD,GANbxP,cAcjB,cAAC,GAAD,CAAoB3K,QAAQ,iCAAQqR,UAAWqJ,EAAQpJ,QAAQ,sBCnKxDpD,gBAdS,SAACxF,GAAD,MAAY,CAClC2Q,KAAM3Q,EAAM8C,MAAMvD,OAClBuP,UAAW9O,EAAM8C,MAAMgM,UACvBpN,MAAO1B,EAAM8C,MAAMpB,MACnBjC,KAAMO,EAAMyF,UAAUhG,KACtBoR,UAAW7Q,EAAM8C,MAAMrD,KACvBmU,QAAS5T,EAAM8C,MAAMrD,KACrB0I,UAAWnI,EAAM8C,MAAMd,qBACvBP,aAAczB,EAAM8C,MAAMrB,aAC1BM,SAAU/B,EAAM8C,MAAMf,SACtB+O,eAAgB9Q,EAAM8C,MAAMlB,UAC5BmP,aAAc/Q,EAAM8C,MAAMjB,WAGY,CACtCgS,QzByFqB,WACrB,8CAAO,WAAOjO,GAAP,eAAAC,EAAA,sEACkBnI,KADlB,OACCG,EADD,OAEL+H,EApC8B,CAChChL,KAAMkE,GACNhB,KAkCmBD,IAFZ,2CAAP,uDyBzFAyE,eACAC,cACAqO,avB2E0B,SAAC3O,GAAD,MAAS,CACnCrH,KAAMsG,GACNe,OuB5EAQ,eACAE,gBACAC,cACAoO,avBkE0B,SAACrP,GAAD,MAAa,CACvC/G,KAAMqG,GACNU,YuB5Ea6D,EAlEa,SAAC,GAmBtB,IAlBLqO,EAkBI,EAlBJA,QACAlD,EAiBI,EAjBJA,KACAlR,EAgBI,EAhBJA,KACAiC,EAeI,EAfJA,MACAoN,EAcI,EAdJA,UACAxM,EAaI,EAbJA,YACAC,EAYI,EAZJA,WACA4F,EAWI,EAXJA,UACAyI,EAUI,EAVJA,aACAnO,EASI,EATJA,YACAhB,EAQI,EARJA,aACAM,EAOI,EAPJA,SACA8O,EAMI,EANJA,UACAC,EAKI,EALJA,eACAC,EAII,EAJJA,aACApO,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAoO,EACI,EADJA,aAMA,OAJAlM,qBAAU,WACR+O,MACC,IAEEpU,GAAwB,IAAhBA,EAAKiE,QAAiByE,GAAkC,IAArBA,EAAUzE,OAIxD,cAAC,GAAD,CAEIiN,OACAlR,OACAiC,QACAoN,YACAxM,cACAC,aACA4F,YACAyI,eACAnO,cACAhB,eACAM,WACA8O,YACAC,iBACAC,eACApO,eACAC,aACAoO,iBArBG,cAAC,GAAD,O,kDCRI8C,GA5BM,SAAC,GAAoE,IAAlEnU,EAAiE,EAAjEA,qBAAsBD,EAA2C,EAA3CA,oBAAqBqU,EAAsB,EAAtBA,iBACjE,OACE,qBAAK5c,UAAWC,KAAE4c,oBAAlB,SACE,qBAAK7c,UAAWC,KAAE6c,sBAAlB,SACE,cAAC,KAAD,CACEC,SAAUH,EACVI,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,EAAiBC,KAAjB,EAAuBC,WAAvB,EAAmCC,SAAnC,EAA6CC,OAA7C,OACN,sBAAMN,SAAUE,EAAhB,SACE,sBAAKjd,UAAWC,KAAEqd,YAAlB,UACE,qBAAKtd,UAAWC,KAAEsd,iBAAlB,+GACA,sBAAKvd,UAAWC,KAAEud,eAAlB,UACE,wBAAQxd,UAAWC,KAAEwd,eAAgBha,KAAK,SAA1C,gFACA,wBAASzD,UAAS,UAAKC,KAAEwd,eAAP,YAAyBxd,KAAEyd,UAC3Cja,KAAK,SACL9B,QAAS,kBAAM6G,GAAsBD,IAFvC,oFChBLoV,GAAkB,SAACC,GAC5B,IAAMC,EAAQD,EAAU5K,MAAM,EAAG,GAAG8K,oBAC9BC,EAASH,EAAU5K,MAAM,EAAG,GAC5BgL,EAAQJ,EAAU5K,MAAM,EAAG,GAAG8K,oBAC9BG,EAASL,EAAU5K,MAAM,EAAG4K,EAAUrR,QAE5C,MAAM,GAAN,OAAUsR,EAAV,YAAmBE,EAAnB,YAA6BC,EAA7B,YAAsCC,ICI1ChO,EAAQ,IAER,IAkEeiO,GAlEK,SAAC,GAOd,IANL5T,EAMI,EANJA,aACA0G,EAKI,EALJA,UACAvG,EAII,EAJJA,UAEAmH,GAEI,EAHJrJ,oBAGI,EAFJqJ,aAEI,EADJD,UAOA,OACE,qBAAK3R,UAAWC,KAAEke,mBAAlB,SACE,sBAAKne,UAAWC,KAAEme,qBAAlB,UACE,sBAAKpe,UAAWC,KAAEoe,gBAAlB,UACE,+BACGzM,GAAsC,IAAvBA,EAAYrF,QAC1B,qBAAKvM,UAAWC,KAAEsd,iBAAlB,kIAEF,oBAAIvd,UAAWse,KAAa3F,aAA5B,SAA2CrO,EAAaxJ,OACvDwJ,EAAaiU,OACZ,oBAAIve,UAAS,WAAMC,KAAE2d,UAAR,YAAqB3d,KAAEuC,MAApC,SACGmb,GAAgBrT,EAAaiU,UAGhC,oBAAIve,UAAS,WAAMC,KAAE2d,UAAR,YAAqB3d,KAAEuC,MAApC,SACE,sBAAMxC,UAAS,UAAKC,KAAEue,WAAtB,SACGb,GAAgB,gCAItB3M,EAAU3N,KAAI,YAA+C,IAA5C0H,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,YAAaF,EAAkB,EAAlBA,GACzC,GAD2D,EAAdI,QAE3C,OACE,+BACE,uBAAMlL,UAAS,UAAKC,KAAEwS,OAAP,YAAiBxS,KAAEuC,MAAlC,UACGuI,EAAY,OAEf,sBAAM/K,UAAS,UAAKC,KAAEue,WAAtB,SAAoCxT,MAJ7BF,MAQf,+BACE,sBAAM9K,UAAS,UAAKC,KAAEwS,OAAP,YAAiBxS,KAAEuC,MAAlC,qEAA4D,IAC5D,sBAAMxC,UAAS,UAAKC,KAAEue,WAAtB,SACG5N,KAAOnG,GAAWgU,OAAO,sBACpB,UAGZ,qBACEze,UAAWC,KAAEye,cACb5F,MAAO,CACLC,gBAAgB,OAAD,OAAShJ,GACtBzF,EAAaiO,UAAUS,MADV,WAMrB,cAAC,GAAD,CAAoB7Y,QAAQ,mDAAWuR,QAAQ,U,oBCtEjDiN,GAAmB,mBACnBC,GAAiB,iBAEnB/W,GAAe,CACjB+J,YAAa,GACbD,UAAW,IAwCAkN,GAAe,SAAC/X,GAC3B,8CAAO,WAAO2H,GAAP,eAAAC,EAAA,sEACkBnI,GAAuBO,GADzC,OACCJ,EADD,OAEL+H,EAhBmC,CACrChL,KAAMmb,GACNjY,KAcwBD,IAFjB,2CAAP,uDAMaoY,GA5Ca,WAAmC,IAAlCjW,EAAiC,uDAAzBhB,GAAciB,EAAW,uCAC5D,OAAQA,EAAOrF,MACb,KAAKkb,GACH,OAAO,uCACF9V,GACAC,GAFL,IAGE8I,YAAa9I,EAAOnC,OAExB,KAAKiY,GACH,OAAO,uCACF/V,GACAC,GAFL,IAGE6I,UAAW7I,EAAOnC,OAEtB,QACE,OAAOkC,ICwBEwF,gBARS,SAACxF,GAAD,MAAY,CAClCyB,aAAczB,EAAM8C,MAAMrB,aAC1B0G,UAAWnI,EAAM8C,MAAMd,qBACvBJ,UAAW5B,EAAM8C,MAAMlB,UACvBmH,YAAa/I,EAAM4K,QAAQ7B,YAC3BD,UAAW9I,EAAM4K,QAAQ9B,aAGa,CAAEkN,iBAA3BxQ,EA1Cc,SAAC,GAOvB,IANL/D,EAMI,EANJA,aACA0G,EAKI,EALJA,UACAvG,EAII,EAJJA,UACAmH,EAGI,EAHJA,YACAiN,EAEI,EAFJA,aACAlN,EACI,EADJA,UAEIoN,EAAUC,cAYd,OAVArR,qBAAU,WACR,GAA2B,IAAvBiE,EAAYrF,OAAc,CAC5B,IAAMgC,EAAWwQ,EAAQxQ,SAAS0Q,SAC5BnY,EAAU8K,EAAYjL,KAAKmE,GAC3BoU,EAAY,mBAAepY,GACjCiY,EAAQ9J,KAAR,UAAgB1G,GAAhB,OAA2B2Q,IAC3BL,EAAa/X,MAEd,CAAC8K,IAGF,cAAC,GAAD,CAEItH,eACA0G,YACAvG,YACAmH,cACAiN,eACAlN,iBCrBR1B,EAAQ,IAER,IAyGe5B,gBAjBS,SAACxF,GAAD,MAAY,CAClCpI,KAAMoI,EAAMyF,UAAUrG,sBACtBlB,QAAS8B,EAAMyF,UAAUnG,aACzBoC,MAAO1B,EAAM8C,MAAMpB,MACnBjC,KAAMO,EAAM8C,MAAMrD,KAClBkC,OAAQ3B,EAAM8C,MAAMnB,OACpBwG,UAAWnI,EAAM8C,MAAMd,qBACvBJ,UAAW5B,EAAM8C,MAAMlB,UACvBC,QAAS7B,EAAM8C,MAAMjB,QACrBJ,aAAczB,EAAM8C,MAAMrB,aAC1B/B,oBAAqBM,EAAMyF,UAAU/F,oBACrCoC,YAAa9B,EAAM8C,MAAMhB,YACzB5C,OAAQc,EAAMyF,UAAUvG,OACxBD,OAAQe,EAAMyF,UAAUxG,OACxB8J,YAAa/I,EAAM4K,QAAQ7B,eAGW,CACtCiN,gBACArW,wBACA2W,UFrFuB,SAACvY,GACxB,8CAAO,WAAO6H,GAAP,eAAAC,EAAA,sEACkBnI,GAAwBK,GAD1C,OACCF,EADD,OAEL+H,EAbqC,CACvChL,KAAMkb,GACNhY,KAW0BD,IAFnB,2CAAP,wDEiFa2H,EAzGe,SAAC,GAkBxB,IAjBL5N,EAiBI,EAjBJA,KACAsG,EAgBI,EAhBJA,QACAwD,EAeI,EAfJA,MACAjC,EAcI,EAdJA,KACA0I,EAaI,EAbJA,UACAvG,EAYI,EAZJA,UACAC,EAWI,EAXJA,QACAJ,EAUI,EAVJA,aACA/B,EASI,EATJA,oBACAC,EAQI,EARJA,qBACAgC,EAOI,EAPJA,OACAG,EAMI,EANJA,YACAwU,EAKI,EALJA,UACApX,EAII,EAJJA,OACAD,EAGI,EAHJA,OAIIgK,GADA,EAFJF,YAEI,EADJiN,aAEc,IACVhN,EAAS,GAEb9J,EAAOpB,KAAKkO,QAAO,SAACK,GAClB,GACEnO,EAAQ,GAAGjG,KAAK4I,QAAQ,WAAY,MACpCwL,EAAMnO,QAAQ2C,QAAQ,WAAY,IAElC,OAAQoI,EAAUoD,EAAMpK,MAI5BhD,EAAOnB,KAAKkO,QAAO,SAAC/M,GAClB,GAAIrH,IAASqH,EAAOhH,KAClB,OAAQ+Q,EAAS/J,EAAOgD,MAIdkU,cAAd,IAEM5M,EAAapB,EAAU,GAAG9F,QAC1BmH,EAAmBrB,EAAU,GAAG9F,QAChCkU,EAAepO,EAAU,GAAG9F,QAE5BtE,EAAM,CACVyY,cAAe,CACbve,KAAM,MACNgK,GAAI,4BAEN+G,OAAQA,EAAOhC,WACfiC,QAASA,EAAQjC,WACjBkC,MAAOzH,EAAaQ,GAAG+E,WACvBtF,MAAOA,EAAMsF,WACbqC,SAAUtB,KAAOC,SAASpG,GAAW6G,cACrCU,OAAQpB,KAAOC,SAASnG,GAAS4G,cACjC9G,OAAQA,EAAOqF,WACf5E,MAAOoE,WAAW1E,EAAYjB,QAAQ,MAAO,KAC7C0I,WAAYkN,QAAQlN,GACpBC,iBAAkBiN,QAAQjN,GAC1BC,aAAcgN,QAAQF,IAQxB,OACE,cAAC,GAAD,CAEI7W,sBACAC,uBACA/H,OACAsG,UACAwD,QACAjC,OACA0I,YACAvG,YACAC,UACAJ,eACA8H,aACAC,mBACA+M,eACAxC,iBArBmB,WACvBuC,EAAUvY,GACV4B,GAAsBD,S,oBCrE1B0H,EAAQ,IAER,IAyEesP,GAzEa,SAAC,GAOvB,EANJjV,aAMI,EALJ0G,UAKI,EAJJvG,UAII,EAHJlC,oBAGI,EAFJqJ,YAEK,IADLD,EACI,EADJA,UAEA,OACE,qBAAK3R,UAAWC,KAAEke,mBAAlB,SACE,sBAAKne,UAAWC,KAAEme,qBAAlB,UACE,sBAAKpe,UAAWC,KAAEoe,gBAAlB,UACE,+BACG1M,GAAkC,IAArBA,EAAUpF,QACtB,qBAAKvM,UAAWC,KAAEsd,iBAAlB,kIAEF,oBAAIvd,UAAWse,KAAa3F,aAA5B,SACGhH,EAAUhL,KAAKoL,MAAMjR,OAEvB6Q,EAAUhL,KAAKoL,MAAMwM,OACpB,oBAAIve,UAAS,WAAMC,KAAE2d,UAAR,YAAqB3d,KAAEuC,MAApC,SACGmb,GAAgBhM,EAAUhL,KAAKoL,MAAMwM,UAGxC,oBAAIve,UAAS,WAAMC,KAAE2d,UAAR,YAAqB3d,KAAEuC,MAApC,SACE,sBAAMxC,UAAS,UAAKC,KAAEue,WAAtB,SACGb,GAAgB,gCAItBhM,EAAUhL,KAAKyL,YACd,+BACG,IACD,sBAAMpS,UAAS,UAAKC,KAAEwS,OAAP,YAAiBxS,KAAEuC,MAAlC,wDACA,sBAAMxC,UAAS,UAAKC,KAAEue,WAAtB,sBAGH7M,EAAUhL,KAAK0L,kBACd,+BACG,IACD,sBAAMrS,UAAS,UAAKC,KAAEwS,OAAP,YAAiBxS,KAAEuC,MAAlC,6FACA,sBAAMxC,UAAS,UAAKC,KAAEue,WAAtB,8BAGH7M,EAAUhL,KAAK2L,cACd,+BACG,IACD,sBAAMtS,UAAS,UAAKC,KAAEwS,OAAP,YAAiBxS,KAAEuC,MAAlC,2EACA,sBAAMxC,UAAS,UAAKC,KAAEue,WAAtB,8BAGJ,+BACE,sBAAMxe,UAAS,UAAKC,KAAEwS,OAAP,YAAiBxS,KAAEuC,MAAlC,qEAA4D,IAC5D,sBAAMxC,UAAS,UAAKC,KAAEue,WAAtB,SACG5N,KAAOe,EAAUhL,KAAKuL,UAAUuM,OAAO,sBAClC,UAGZ,qBACEze,UAAWC,KAAEye,cACb5F,MAAO,CACLC,gBAAgB,OAAD,OAAShJ,GACtB4B,EAAUhL,KAAKoL,MAAMwG,UAAUS,MADlB,WAMrB,cAAC,GAAD,CAAoB7Y,QAAQ,mDAAWuR,QAAQ,UC9BxCrD,gBARS,SAACxF,GAAD,MAAY,CAClCyB,aAAczB,EAAM8C,MAAMrB,aAC1B0G,UAAWnI,EAAM8C,MAAMd,qBACvBJ,UAAW5B,EAAM8C,MAAMlB,UACvBmH,YAAa/I,EAAM4K,QAAQ7B,YAC3BD,UAAW9I,EAAM4K,QAAQ9B,aAGa,CAAEkN,iBAA3BxQ,EAxCqB,SAAC,GAO9B,IANL/D,EAMI,EANJA,aACA0G,EAKI,EALJA,UACAvG,EAII,EAJJA,UACAmH,EAGI,EAHJA,YACAiN,EAEI,EAFJA,aACAlN,EACI,EADJA,UAEIoN,EAAUC,cAOd,OANArR,qBAAU,WACR,IACM7G,EADS0Y,KAAYC,MAAMV,EAAQxQ,SAASmR,QAC3B5Y,QACvB+X,EAAa/X,KACZ,CAAC8K,IAEqB,IAArBD,EAAUpF,OACL,cAAC,GAAD,IAGP,cAAC,GAAD,CAEIjC,eACA0G,YACAvG,YACAmH,cACAiN,eACAlN,iBC4BOgO,GAjDE,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAASrX,EAA0B,EAA1BA,oBAC3B,OACE,0BAASvI,UAAWC,IAAE4f,gBAAtB,UACGtX,GAAuB,cAAC,GAAD,IACxB,qBAAKvI,UAAWC,IAAE6f,kBAAlB,SACE,qBAAK9f,UAAWC,IAAE8f,kBAAlB,SACE,cAAC,EAAD,QAIJ,cAAC,GAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLhH,KAAK,0BACLiH,UAAWC,MAEXN,GACA,cAAC,IAAD,CACE5G,KAAK,gCACLiH,UAAWE,MAIbP,GACA,cAAC,IAAD,CACE5G,KAAK,uCACLiH,UAAWG,KAGbR,EAOA,cAAC,IAAD,CACEI,OAAK,EACLhH,KAAK,sCACLiH,UAAWI,KATb,cAAC,IAAD,CACEL,OAAK,EACLhH,KAAK,sCACLiH,UAAWK,YC3BRjS,gBANS,SAACxF,GAAD,MAAY,CAClC+W,QAAS/W,EAAMyF,UAAUtG,iBACzBO,oBAAqBM,EAAMyF,UAAU/F,oBACrCqJ,YAAa/I,EAAM4K,QAAQ7B,eAGW,CAAEiN,iBAA3BxQ,EAfW,SAAC,GAKpB,IAJLuR,EAII,EAJJA,QACArX,EAGI,EAHJA,oBAGI,EAFJqJ,YAEI,EADJiN,aAEA,OAAO,cAAC,GAAD,CAAgBe,UAASrX,2BCwBnBgY,GA3BK,SAACxgB,GAAW,IAAD,EACSoU,oBAAS,GADlB,mBACtBqM,EADsB,KACRC,EADQ,OAEYtM,oBAAS,GAFrB,mBAEtB3S,EAFsB,KAENC,EAFM,KAI7B,OACE,sBAAKzB,UAAWC,IAAEygB,mBAAlB,UACGF,GAAgB,cAAC,EAAD,IACjB,cAAC,EAAD,CACEjf,SAAUif,EACVlf,UAAWmf,EACXjf,eAAgBA,EAChBC,eAAgBA,IAElB,eAAC,IAAD,WACE,eAAC,IAAD,CAAOue,OAAK,EAAChH,KAAK,mBAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,IAAD,CAAOA,KAAK,0BAAZ,SACE,cAAC,GAAD,aClBK2H,GARH,SAAC5gB,GACX,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,GAAD,O,mBCGF4gB,GAAWC,aAAgB,CAC3BvS,UAAW1F,GACX2F,SAAUhF,GACVoC,MAAOC,GACP6H,QAASqL,KAGTgC,GAAQC,aAAYH,GAAUI,aAAgBC,OAElDC,OAAOJ,MAAQA,GACAA,UCXfK,IAASnE,OACP,cAAC,IAAMoE,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,UAINO,SAASC,eAAe,U,mBCf1B1hB,EAAOC,QAAU,CAAC,cAAc,2BAA2B,eAAe,4BAA4B,WAAa,0BAA0B,iBAAmB,gCAAgC,UAAY,yBAAyB,cAAgB,6BAA6B,gBAAkB,+BAA+B,aAAe,4BAA4B,cAAgB,6BAA6B,OAAS,sBAAsB,IAAM,mBAAmB,MAAQ,qBAAqB,KAAO,oBAAoB,IAAM,mBAAmB,OAAS,wB,mBCA7iBD,EAAOC,QAAU,CAAC,kBAAoB,yCAAyC,oBAAsB,2CAA2C,cAAgB,qCAAqC,UAAY,iCAAiC,SAAW,kC,mBCA7PD,EAAOC,QAAU,CAAC,YAAc,0BAA0B,UAAY,wBAAwB,SAAW,uBAAuB,KAAO,mBAAmB,SAAW,uBAAuB,WAAa,yBAAyB,UAAY,wBAAwB,MAAQ,sB,mBCA9QD,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,qBAAuB,sCAAsC,YAAc,+B,mBCApTD,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,eAAiB,mCAAmC,SAAW,6BAA6B,UAAY,8BAA8B,eAAiB,mCAAmC,sBAAwB,0CAA0C,mBAAqB,yC,mBCAzVD,EAAOC,QAAU,CAAC,oBAAsB,0CAA0C,sBAAwB,4CAA4C,YAAc,kCAAkC,iBAAmB,uCAAuC,eAAiB,qCAAqC,eAAiB,qCAAqC,SAAW,iC,mBCAvXD,EAAOC,QAAU,CAAC,kBAAoB,sCAAsC,oBAAsB,wCAAwC,uBAAyB,2CAA2C,gBAAkB,oCAAoC,YAAc,kC,mBCAlRD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,WAAa,2BAA2B,YAAc,4BAA4B,KAAO,uB,mBCAzJD,EAAOC,QAAU,CAAC,WAAa,0B,mBCA/BD,EAAOC,QAAU,CAAC,gBAAkB,kCAAkC,kBAAoB,oCAAoC,kBAAoB,sC,mBCAlJD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,iBAAmB,uCAAuC,iBAAmB,yC,mBCAjJD,EAAOC,QAAU,CAAC,gBAAkB,uCAAuC,cAAgB,qCAAqC,eAAiB,sCAAsC,cAAgB,qCAAqC,eAAiB,sCAAsC,sBAAwB,6CAA6C,mBAAqB,4C,kBCA7XD,EAAOC,QAAU,CAAC,iBAAmB,oCAAoC,aAAe,gCAAgC,SAAW,4BAA4B,cAAgB,iCAAiC,iBAAmB,oCAAoC,cAAgB,iCAAiC,SAAW,4BAA4B,YAAc,+BAA+B,YAAc,+BAA+B,OAAS,0BAA0B,WAAa,8BAA8B,MAAQ,yBAAyB,YAAc,+BAA+B,eAAiB,kCAAkC,OAAS,0BAA0B,QAAU,8B","file":"static/js/main.e5c9894e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"BookButton_btn__3MVF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startScreenWrapper\":\"StrartSrceen_startScreenWrapper__1WqH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrapper\":\"preloader_preloaderWrapper__MxtbJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultOrderWrapper\":\"InitializeOrder_resultOrderWrapper__cKf6w\",\"resultOrderContainer\":\"InitializeOrder_resultOrderContainer__Lcoi2\",\"resultInfoBLock\":\"InitializeOrder_resultInfoBLock__3GEMM\",\"text\":\"InitializeOrder_text__3Nnl3\",\"confirmOrderText\":\"InitializeOrder_confirmOrderText__2XYff\",\"extraText\":\"InitializeOrder_extraText__26pC6\",\"carNumber\":\"InitializeOrder_carNumber__1UaKx\",\"liName\":\"InitializeOrder_liName__kCPt5\",\"carImgWrapper\":\"InitializeOrder_carImgWrapper__1BESo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"additionalPageWrapepr\":\"Additional_additionalPageWrapepr__3us7S\",\"additionalPageContainer\":\"Additional_additionalPageContainer__1tipx\",\"additionalParameters\":\"Additional_additionalParameters__2wChw\",\"additionalBlock\":\"Additional_additionalBlock__3k_Tm\",\"checkBoxesWrapper\":\"Additional_checkBoxesWrapper__1hp1j\",\"checkBoxWrapper\":\"Additional_checkBoxWrapper__1v9Sh\",\"additionalInputBlock\":\"Additional_additionalInputBlock__1hswO\",\"dataPickWrapper\":\"Additional_dataPickWrapper__1P67N\",\"dataFieldWrapper\":\"Additional_dataFieldWrapper__2pKFp\",\"dataInputField\":\"Additional_dataInputField__k4oKn\",\"rateCheckBoxesWrapper\":\"Additional_rateCheckBoxesWrapper__1spFK\",\"additionalParametersCheckboxes\":\"Additional_additionalParametersCheckboxes__1uq-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLocationFormWrapper\":\"BookPageLocation_findLocationFormWrapper__2bN6P\",\"locationContainer\":\"BookPageLocation_locationContainer__3T7Q7\",\"formContainer\":\"BookPageLocation_formContainer__1BDXh\",\"fieldWrapper\":\"BookPageLocation_fieldWrapper__NKH9b\",\"inputField\":\"BookPageLocation_inputField__1reGH\",\"cleanInputBtn\":\"BookPageLocation_cleanInputBtn__9Nr_i\",\"findLocationFormContainer\":\"BookPageLocation_findLocationFormContainer__3heox\",\"mapContainer\":\"BookPageLocation_mapContainer__4JXtY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultOrderWrapper\":\"ResultOrder_resultOrderWrapper__1NuJK\",\"resultOrderContainer\":\"ResultOrder_resultOrderContainer__1rCx9\",\"resultInfoBLock\":\"ResultOrder_resultInfoBLock__2oAaj\",\"text\":\"ResultOrder_text__MtE30\",\"confirmOrderText\":\"ResultOrder_confirmOrderText__3lzuH\",\"extraText\":\"ResultOrder_extraText__5IOi0\",\"carNumber\":\"ResultOrder_carNumber__1BgLS\",\"liName\":\"ResultOrder_liName__3utVH\",\"carImgWrapper\":\"ResultOrder_carImgWrapper__2EJ2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modelPageWrapper\":\"ModelPage_modelPageWrapper__3bdMM\",\"modelPageContainer\":\"ModelPage_modelPageContainer__26Z2-\",\"modelCarChoose\":\"ModelPage_modelCarChoose__3R5PN\",\"checkBoxesWrapper\":\"ModelPage_checkBoxesWrapper__5eM5x\",\"modelCarImagesWrapper\":\"ModelPage_modelCarImagesWrapper__3tn9f\",\"modelCarBlock\":\"ModelPage_modelCarBlock__2WCP_\",\"touch\":\"ModelPage_touch__3YEp8\",\"carInfo\":\"ModelPage_carInfo__2EAlo\",\"carImg\":\"ModelPage_carImg__2_Rt6\",\"carModelName\":\"ModelPage_carModelName__P0rFt\",\"carModelPrice\":\"ModelPage_carModelPrice__WIysp\"};","import React from 'react';\r\nimport s from './BookButton.module.scss';\r\n\r\nconst BookButton = (props) => {\r\n    return (\r\n        <div className={s.btn}>{props.btnName}</div>\r\n    );\r\n}\r\n\r\nexport default BookButton;","export default __webpack_public_path__ + \"static/media/map_city.dd9d4bed.svg\";","import React from \"react\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport city from \"../../Images/map_city.svg\";\r\nimport s from \"./Header.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className={s.headerWrapper}>\r\n     {/* // <NavLink to=\"/need-for-drive\"> */}\r\n        <span className={s.headerLogo}>Need for drive</span>\r\n      {/* </NavLink> */}\r\n      <div className={s.currentCity}>\r\n        <ReactSVG src={city} />\r\n        <span className={s.city}>Саранск</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport s from \"./Main.module.scss\";\r\n\r\nimport BookButton from \"../BookButton/BookButton\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Header from \"../Header/Header\";\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <div className={s.mainWrapper}>\r\n      <Header />\r\n      <div className={s.mainTitle}>\r\n        <span className={s.mainLogo}>Каршеринг</span>\r\n        <span className={s.mainLogo + \" \" + s.name}>Need for drive</span>\r\n        <span className={s.mainSlog}>Поминутная аренда авто твоего города</span>\r\n      </div>\r\n\r\n      <NavLink to={\"/need-for-drive/bookCar\"}>\r\n        <BookButton btnName={\"Забронировать\"} />\r\n      </NavLink>\r\n\r\n      <div className={s.mainFooter}>\r\n        <span className={s.copyright}>© 2016-2019 «Need for drive»</span>\r\n        <a href=\"tel:+74952342244\" className={s.phone}>\r\n          8 (495) 234-22-44\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/menu_btn.71008687.svg\";","export default __webpack_public_path__ + \"static/media/close_menu_btn.bc5cc1c9.svg\";","import React from \"react\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport s from \"./SideBar.module.scss\";\r\nimport menu_btn from \"../../Images/menu_btn.svg\";\r\nimport close_menu_btn from \"../../Images/close_menu_btn.svg\";\r\n\r\nconst SideBar = ({\r\n  setActive,\r\n  isActive,\r\n  langBtnClicked,\r\n  changeSiteLang\r\n}) => {\r\n  return (\r\n    <div className={s.sideBarWrapper}>\r\n      <button\r\n        onClick={() => setActive(!isActive)}\r\n        className={s.menuBtn}\r\n      >\r\n        {isActive ? (\r\n          <ReactSVG src={close_menu_btn} />\r\n        ) : (\r\n          <ReactSVG src={menu_btn} className={s.openMenuBtn} />\r\n        )}\r\n      </button>\r\n      <div\r\n        className={[\r\n          isActive\r\n            ? s.langBtnWrapper + \" \" + s.langBtnWrapperMobile\r\n            : s.langBtnWrapper,\r\n        ]}\r\n        onClick={() => changeSiteLang(!langBtnClicked)}\r\n      >\r\n        <button\r\n          className={[\r\n            isActive ? s.langBtn + \" \" + s.langBtnMobile : s.langBtn,\r\n          ]}\r\n          \r\n        >\r\n          {langBtnClicked ? \"Eng\" : \"Рус\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","export default __webpack_public_path__ + \"static/media/slider.852d54bc.png\";","export default __webpack_public_path__ + \"static/media/slide1.f5f31448.png\";","export default __webpack_public_path__ + \"static/media/slide2.495aeda0.png\";","export default __webpack_public_path__ + \"static/media/slide3.44455ae9.png\";","export default __webpack_public_path__ + \"static/media/left_arrow.dd0226d1.svg\";","export default __webpack_public_path__ + \"static/media/right_arrow.9d87137d.svg\";","import React from \"react\";\r\nimport Carousel from \"nuka-carousel\";\r\n\r\nimport slide from \"../../Images/slider.png\";\r\nimport slide1 from \"../../Images/slide1.png\";\r\nimport slide2 from \"../../Images/slide2.png\";\r\nimport slide3 from \"../../Images/slide3.png\";\r\n\r\nimport left_arrow from \"../../Images/left_arrow.svg\";\r\nimport right_arrow from \"../../Images/right_arrow.svg\";\r\n\r\nimport s from \"./slide.module.scss\";\r\n\r\nconst slides = [\r\n  {\r\n    img: slide,\r\n    article: \"Бесплатная парковка\",\r\n    text:\r\n      \"Оставляйте машину на платных городских парковках и разрешенных местах, не нарушая ПДД, а также в аэропортах.\",\r\n    buttonColor: \"green\",\r\n  },\r\n  {\r\n    img: slide1,\r\n    article: \"Страховка\",\r\n    text: \"Полная страховка автомобиля\",\r\n    buttonColor: \"blue\",\r\n  },\r\n  {\r\n    img: slide2,\r\n    article: \"Бензин\",\r\n    text: \"Полный бак на любой заправке города за наш счёт\",\r\n    buttonColor: \"red\",\r\n  },\r\n  {\r\n    img: slide3,\r\n    article: \"Обслуживание\",\r\n    text: \"Автомобиль проходит еженедельное ТО\",\r\n    buttonColor: \"purple\",\r\n  },\r\n];\r\n\r\nconst Slider = (props) => {\r\n  return (\r\n    <Carousel\r\n      speed={150}\r\n      renderBottomCenterControls={({ slideCount, currentSlide, goToSlide }) => (\r\n        <div className={\"slider-control-bottomcenter\" + \" \" + s.slider_bottom}>\r\n          <ul>\r\n            {[...Array(slideCount)].map((e, key) => (\r\n              <li\r\n                className={currentSlide === key ? \"active\" : undefined}\r\n                key={key}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  aria-label=\"slide 1 bullet\"\r\n                  onClick={() => goToSlide(key)}\r\n                >\r\n                  <svg width=\"12\" height=\"12\">\r\n                    <circle cx=\"4\" cy=\"4\" r=\"4\" />\r\n                  </svg>\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      renderCenterLeftControls={({ previousSlide }) => (\r\n        <button onClick={previousSlide} className={s.sliderButton}>\r\n          <img alt=\"left\" src={left_arrow} />\r\n        </button>\r\n      )}\r\n      renderCenterRightControls={({ nextSlide }) => (\r\n        <button onClick={nextSlide} className={s.sliderButton}>\r\n          <img alt=\"right\" src={right_arrow} />\r\n        </button>\r\n      )}\r\n      width=\"50%\"\r\n      wrapAround={true}\r\n      defaultControlsConfig={{\r\n        containerClassName: s.buttonContainer,\r\n        pagingDotsContainerClassName: s.paginationContainer,\r\n        pagingDotsStyle: {\r\n          fill: \"white\",\r\n          opacity: \"1\",\r\n        },\r\n        pagingDotsClassName: s.dot,\r\n      }}\r\n    >\r\n      {slides.map((slider, index) => {\r\n        return (\r\n          <div className={s.sliderItem} key={index}>\r\n            <div className={s.sliderImgWrapper}>\r\n              <img className={s.sliderImg} alt=\"slider\" src={slider.img} />\r\n            </div>\r\n\r\n            <div className={s.sliderContent}>\r\n              <h3>{slider.article}</h3>\r\n              <p>{slider.text}</p>\r\n              <button\r\n                className={s[slider.buttonColor]}\r\n              >\r\n                Подробнее\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","export default __webpack_public_path__ + \"static/media/Telegram_white.e8137bbe.svg\";","export default __webpack_public_path__ + \"static/media/Facebook_white.c1876cc3.svg\";","export default __webpack_public_path__ + \"static/media/Instagram_white.98094ec4.svg\";","import React from \"react\";\r\nimport s from \"./BurgerMenu.module.scss\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport tg from '../../Images/Telegram_white.svg';\r\nimport fb from '../../Images/Facebook_white.svg';\r\nimport inst from '../../Images/Instagram_white.svg';\r\n\r\nconst BurgerMenu = (props) => {\r\n  return (\r\n    <div className={s.burgerMenuWrapper}>\r\n      <div className={s.burgerMenuContainer}>\r\n        <div className={s.burgerMenuLinksWrapper}>\r\n          <div className={s.burgerMenuLinks}>\r\n            <a href=\"q\">ПАРКОВКА</a>\r\n            <a href=\"q\">СТРАХОВКА</a>\r\n            <a href=\"q\">БЕНЗИН</a>\r\n            <a href=\"q\">ОБСЛУЖИВАНИЕ</a>\r\n          </div>\r\n          <div className={s.socialLinks}>\r\n            <a href=\"q\"><ReactSVG src={tg}/></a>\r\n            <a href=\"q\"><ReactSVG src={fb}/></a>\r\n            <a href=\"q\"><ReactSVG src={inst}/></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerMenu;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api-factory.simbirsoft1.com/api/db/\",\r\n  headers: {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Credentials\": \"true\",\r\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n    \"Access-Control-Allow-Headers\":\r\n      \"x-requested-with, Content-Type, origin, authorization, accept, x-api-factory-application-id\",\r\n    \"X-Api-Factory-Application-Id\": \"5e25c641099b810b946c5d5b\",\r\n  },\r\n});\r\n\r\nconst instanceGeoCode = axios.create({\r\n  baseURL:\r\n    \"https://geocode-maps.yandex.ru/1.x/?apikey=f15baf66-fdac-4eae-957a-fb354e706d9b&format=json\",\r\n  headers: {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Credentials\": \"true\",\r\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n    \"Access-Control-Allow-Headers\":\r\n      \"x-requested-with, Content-Type, origin, authorization, accept, x-api-factory-application-id\",\r\n  },\r\n});\r\n\r\nexport const simbirsoftAPI = {\r\n  getCities() {\r\n    return instance.get(`city`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  getPoints() {\r\n    return instance.get(`point`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  getCars() {\r\n    return instance.get(`car`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  getCategories() {\r\n    return instance.get(`category`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  getRate() {\r\n    return instance.get(`rate`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  postOrder(res) {\r\n    return instance.post(`order`, res).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  getOrder(orderId) {\r\n    return instance.get(`order/${orderId}`).then((response) => {\r\n      return response.data;\r\n    })\r\n  },\r\n\r\n  addressGeocode(address, city) {\r\n    return instanceGeoCode\r\n      .get(\"\", {\r\n        params: {\r\n          geocode: `${address} ${city}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n\r\n  coordsGeocode(coords) {\r\n    return instanceGeoCode\r\n      .get(\"\", {\r\n        params: {\r\n          geocode: `${coords}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\n","import { simbirsoftAPI } from \"./../API/api\";\r\n\r\nconst SET_CITIES = \"SET_CITIES\";\r\nconst SET_POINTS = \"SET_POINTS\";\r\nconst SET_AVAILABLE = \"SET_AVAILABLE\";\r\nconst SET_INPUT_CITY_VALUE = \"SET_INPUT_CITY_VALUE\";\r\nconst SET_INPUT_POINT_VALUE = \"SET_INPUT_POINT_VALUE\";\r\nconst SET_CITY_ADRESSES = \"SET_CITY_ADRESSES\";\r\nconst SET_MODELS = \"SET_MODELS\";\r\nconst SET_CATEGORIES = \"SET_CATEGORIES\";\r\nconst SET_RATE = \"SET_RATE\";\r\nconst SET_CONFIRM_FORM_ACTIVE = \"SET_CONFIRM_FORM_ACTIVE\";\r\n\r\nlet initialState = {\r\n  cities: [],\r\n  points: [],\r\n  isModelAvailable: true,\r\n  currentInputCityValue: \"\",\r\n  currentInputPointValue: \"\",\r\n  cityAdresses: [],\r\n  models: [],\r\n  categories: [],\r\n  rate: [],\r\n  isConfirmFormActive: false,\r\n};\r\n\r\nconst orderPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CITIES:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        cities: action.data,\r\n      };\r\n    case SET_POINTS:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        points: action.data,\r\n      };\r\n    case SET_AVAILABLE:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        isModelAvailable: action.data,\r\n      };\r\n    case SET_INPUT_CITY_VALUE:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        currentInputCityValue: action.data,\r\n      };\r\n    case SET_INPUT_POINT_VALUE:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        currentInputPointValue: action.data,\r\n      };\r\n    case SET_CITY_ADRESSES:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        cityAdresses: action.data,\r\n      };\r\n    case SET_MODELS:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        models: action.data,\r\n      };\r\n    case SET_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        categories: action.data,\r\n      };\r\n      case SET_RATE:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        rate: action.data,\r\n      };\r\n      case SET_CONFIRM_FORM_ACTIVE:\r\n        return {\r\n          ...state,\r\n          ...action,\r\n          isConfirmFormActive: action.bool\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setConfirmFormActive = (bool) => ({\r\n  type: SET_CONFIRM_FORM_ACTIVE,\r\n  bool,\r\n})\r\n\r\nexport const setInputCityValue = (value) => ({\r\n  type: SET_INPUT_CITY_VALUE,\r\n  data: value,\r\n});\r\n\r\nexport const setInputPointValue = (value) => ({\r\n  type: SET_INPUT_POINT_VALUE,\r\n  data: value,\r\n});\r\n\r\nexport const setCityAdresses = (adresses) => ({\r\n  type: SET_CITY_ADRESSES,\r\n  data: adresses,\r\n});\r\n\r\nexport const setCities = (cities) => ({\r\n  type: SET_CITIES,\r\n  data: cities,\r\n});\r\n\r\nexport const setPoints = (points) => ({\r\n  type: SET_POINTS,\r\n  data: points,\r\n});\r\n\r\nexport const setModelAvailable = (bool) => ({\r\n  type: SET_AVAILABLE,\r\n  data: bool,\r\n});\r\n\r\nexport const setCars = (cars) => ({\r\n  type: SET_MODELS,\r\n  data: cars,\r\n});\r\n\r\nexport const setCategories = (categories) => ({\r\n  type: SET_CATEGORIES,\r\n  data: categories,\r\n});\r\n\r\nexport const setRate = (rate) => ({\r\n  type: SET_RATE,\r\n  data: rate,\r\n});\r\n\r\nexport const getCitiesThunkCreator = () => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.getCities();\r\n    dispatch(setCities(response));\r\n  };\r\n};\r\n\r\nexport const getPointsThunkCreator = () => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.getPoints();\r\n    dispatch(setPoints(response));\r\n  };\r\n};\r\n\r\nexport const getCars = () => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.getCars();\r\n    dispatch(setCars(response));\r\n  };\r\n};\r\n\r\nexport const getCategories = () => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.getCategories();\r\n    dispatch(setCategories(response));\r\n  };\r\n};\r\n\r\nexport const getRate = () => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.getRate();\r\n    dispatch(setRate(response));\r\n  };\r\n};\r\n\r\n\r\nexport default orderPageReducer;\r\n","import { simbirsoftAPI } from \"./../API/api\";\r\n\r\nconst SET_ADDRESS_COORDS = \"SET_ADDRESS_COORDS\";\r\nconst SET_CUR_ADDRESS_COORDS = \"SET_CUR_ADDRESS_COORDS\";\r\nconst SET_CUR_POINT_ADDRESS = \"SET_CUR_POINT_ADDRESS\";\r\nconst RESET_COORDS = \"RESET_COORDS\";\r\n\r\nlet initialState = {\r\n  coords: [],\r\n  curAddressCoords: [],\r\n  curPointAddress: \"\",\r\n};\r\n\r\nconst locationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ADDRESS_COORDS:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        coords: [...state.coords, { coords: action.coords }],\r\n      };\r\n    case SET_CUR_ADDRESS_COORDS:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        curAddressCoords: action.data,\r\n      };\r\n      case SET_CUR_POINT_ADDRESS:\r\n        let address = \"\";\r\n        const regexp = /\\bк/gm;\r\n        if(action.data.startsWith(\"улица\")){\r\n          address = action.data.replace(\"улица \", \"\");\r\n        } else if (action.data.startsWith(\"проспект \")){\r\n          address = action.data.replace(\"проспект \", \"\"); \r\n        }  else address = action.data;\r\n        if(address.match(regexp)) {\r\n          address = address.replace(/\\bк/gm, \", корп.\");\r\n        }\r\n        return {\r\n          ...state,\r\n          ...action,\r\n          curPointAddress: address,\r\n        };\r\n    case RESET_COORDS:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        coords: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setCoords = (coords) => ({\r\n  type: SET_ADDRESS_COORDS,\r\n  coords,\r\n});\r\n\r\nexport const setCurPointCoords = (coords) => ({\r\n  type: SET_CUR_ADDRESS_COORDS,\r\n  data: coords,\r\n});\r\n\r\nexport const setCurPointAddress = (address) => ({\r\n  type: SET_CUR_POINT_ADDRESS,\r\n  data: address,\r\n});\r\n\r\nexport const resetCoords = () => ({\r\n  type: RESET_COORDS,\r\n});\r\n\r\nexport const getCoords = (address, city) => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.addressGeocode(address, city);\r\n    dispatch(\r\n      setCoords(\r\n        response.response.GeoObjectCollection.featureMember[0].GeoObject.Point\r\n          .pos\r\n      )\r\n    );\r\n  };\r\n};\r\n\r\nexport const getCurPointCoords = (address, city) => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.addressGeocode(address, city);\r\n    dispatch(\r\n      setCurPointCoords(\r\n        response.response.GeoObjectCollection.featureMember[0].GeoObject.Point\r\n          .pos\r\n      )\r\n    );\r\n  };\r\n};\r\n\r\nexport const getAddress = (coords) => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.coordsGeocode(coords);\r\n    dispatch(setCurPointAddress(response.response.GeoObjectCollection.featureMember[0].GeoObject.name))\r\n  };\r\n};\r\n\r\nexport default locationReducer;\r\n","import { simbirsoftAPI } from \"./../API/api\";\r\n\r\nconst SET_MODELS = \"SET_MODELS\";\r\nconst SET_CAR_COLOR = \"SET_CAR_COLOR\";\r\nconst SET_CAR_RATE = \"SET_CAT_RATE\";\r\nconst SET_CAR_RATE_ID = \"SET_CAT_RATE_ID\";\r\nconst SET_CAR_PARAMS = \"SET_CAR_PARAMS\";\r\nconst SET_DIFF_DATE = \"SET_DIFF_DATE\";\r\nconst UNSET_CAR_PARAMS = \"UNSET_CAR_PARAMS\";\r\nconst SET_CURRENT_MODEL = \"SET_CURRENT_MODEL\";\r\n\r\nconst SET_START_DATE = \"SET_START_DATE\";\r\nconst SET_END_DATE = \"SET_END_DATE\";\r\nconst SET_RESULT_PRICE = \"SET_RESULT_PRICE\";\r\n\r\nlet initialState = {\r\n  models: [],\r\n  currentModel: [],\r\n  color: \"\",\r\n  rate: \"\",\r\n  rateId: \"\",\r\n  startDate: \"\",\r\n  endDate: \"\",\r\n  resultPrice: \"\",\r\n  diffDate: [],\r\n  additionalParameters: [\r\n    {\r\n      id: 12,\r\n      name: \"Полный бак\",\r\n      resultName: \"Топливо\",\r\n      resultValue: \"100%\",\r\n      price: 500,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 23,\r\n      name: \"Детское кресло\",\r\n      resultName: \"Детское кресло\",\r\n      resultValue: \"Да\",\r\n      price: 200,\r\n      checked: false,\r\n    },\r\n    {\r\n      id: 33,\r\n      name: \"Правый руль\",\r\n      resultName: \"Правый руль\",\r\n      resultValue: \"Да\",\r\n      price: 1600,\r\n      checked: false,\r\n    },\r\n  ],\r\n};\r\n\r\nconst modelReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MODELS:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        models: action.data,\r\n      };\r\n\r\n    case SET_CAR_COLOR:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        color: action.data,\r\n      };\r\n    case SET_CAR_RATE:\r\n      return {\r\n        ...state,\r\n        rate: action.rate,\r\n      };\r\n    case SET_CAR_RATE_ID:\r\n      return {\r\n        ...state,\r\n        rateId: action.rateId,\r\n      };\r\n    case SET_CURRENT_MODEL:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        currentModel: action.model,\r\n      };\r\n    case SET_START_DATE:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        startDate: action.date,\r\n      };\r\n    case SET_END_DATE:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        endDate: action.date,\r\n      };\r\n    case SET_DIFF_DATE: {\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        diffDate: action.date,\r\n      };\r\n    }\r\n    case SET_CAR_PARAMS: {\r\n      const id = action.id;\r\n      const exist = state.additionalParameters.some((item) => item.id === id);\r\n      if (exist) {\r\n        const additionalParameters = state.additionalParameters.map((item) =>\r\n          item.id === id\r\n            ? {\r\n                ...item,\r\n                checked: !item.checked,\r\n              }\r\n            : item\r\n        );\r\n        return { ...state, additionalParameters };\r\n      } else {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    }\r\n    case UNSET_CAR_PARAMS:\r\n      return {\r\n        ...state,\r\n        additionalParameters: state.additionalParameters.map((item) => {\r\n          return { ...item, checked: false };\r\n        }),\r\n      };\r\n    case SET_RESULT_PRICE:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        resultPrice: action.price,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setCars = (cars) => ({\r\n  type: SET_MODELS,\r\n  data: cars,\r\n});\r\n\r\nexport const setCarColor = (color) => ({\r\n  type: SET_CAR_COLOR,\r\n  data: color,\r\n});\r\n\r\nexport const setCarRate = (rate) => ({\r\n  type: SET_CAR_RATE,\r\n  rate,\r\n});\r\n\r\nexport const setCarRateId = (rateId) => ({\r\n  type: SET_CAR_RATE_ID,\r\n  rateId,\r\n});\r\n\r\nexport const setCarParams = (id) => ({\r\n  type: SET_CAR_PARAMS,\r\n  id,\r\n});\r\n\r\nexport const unsetCarParams = () => ({\r\n  type: UNSET_CAR_PARAMS,\r\n});\r\n\r\nexport const setDiffDate = (date) => ({\r\n  type: SET_DIFF_DATE,\r\n  date,\r\n});\r\n\r\nexport const setStartDate = (date) => ({\r\n  type: SET_START_DATE,\r\n  date,\r\n});\r\n\r\nexport const setEndDate = (date) => ({\r\n  type: SET_END_DATE,\r\n  date,\r\n});\r\n\r\nexport const setCurrentModel = (model) => ({\r\n  type: SET_CURRENT_MODEL,\r\n  model,\r\n});\r\n\r\nexport const setResultPrice = (price) => ({\r\n  type: SET_RESULT_PRICE,\r\n  price,\r\n});\r\n\r\nexport const getCars = () => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.getCars();\r\n    dispatch(setCars(response));\r\n  };\r\n};\r\n\r\n\r\n\r\nexport default modelReducer;\r\n","export default __webpack_public_path__ + \"static/media/loader.5971ab84.gif\";","import React from \"react\";\r\nimport loader from \"../../Images/loader.gif\";\r\nimport s from './preloader.module.scss';\r\n\r\nconst Preloader = (props) => {\r\n  return (\r\n    <div className={s.preloaderWrapper}>\r\n      <img src={loader} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport s from \"./AutoComplete.module.scss\";\r\n\r\nconst Autocomplete = ({ value, isOpen, filteredValues, itemClickHandler }) => {\r\n  return (\r\n    <ul\r\n      className={\r\n        value.length >= 1 && isOpen ? s.autocomplete : s.autocompleteHide\r\n      }\r\n    >\r\n      {filteredValues.map((name, id) => {\r\n        return (\r\n          <li\r\n            key={id}\r\n            onClick={itemClickHandler}\r\n            className={s.autocompleteItem}\r\n          >\r\n            {name.name}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Autocomplete;\r\n","export default __webpack_public_path__ + \"static/media/clean_input.13854ee1.svg\";","export default __webpack_public_path__ + \"static/media/map_marker.457e9069.svg\";","import React from \"react\";\r\nimport { Map, YMaps } from \"react-yandex-maps\";\r\nimport s from \"./Map.module.scss\";\r\n\r\nconst EmptyMap = (props) => {\r\n  return (\r\n    <div className={s.mapWrapper}>\r\n        <YMaps>\r\n          <Map\r\n            state={{\r\n              center: [55, 54],\r\n              zoom: 5,\r\n            }}\r\n            width=\"100%\"\r\n          >\r\n          </Map>\r\n        </YMaps>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyMap;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Map, Placemark, YMaps } from \"react-yandex-maps\";\r\nimport s from \"./Map.module.scss\";\r\nimport map_marker from \"../../Images/map_marker.svg\";\r\nimport EmptyMap from \"./EmptyMap\";\r\n\r\nconst PointsMap = ({\r\n  handlerGetPointCoords,\r\n  curPointAddress,\r\n  pointAddress,\r\n  curPointCoords,\r\n  city,\r\n  coords,\r\n}) => {\r\n  let coor = [];\r\n\r\n  if (coords) {\r\n    coor = coords.map((c) => {\r\n      return c.coords.split(\" \");\r\n    });\r\n  }\r\n\r\n  const map = useRef();\r\n\r\n  const mySetCenter = (coordinates, zoom) => {\r\n    map.current.setCenter(coordinates, zoom);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (map.current && city) mySetCenter([coor[0][1], coor[0][0]]);\r\n  }, [city]);\r\n\r\n  useEffect(() => {\r\n    if (map.current && curPointCoords.length !== 0) {\r\n      curPointCoords = curPointCoords.split(\" \");\r\n      mySetCenter([curPointCoords[1], curPointCoords[0]], 13);\r\n    }\r\n  }, [curPointCoords])\r\n\r\n\r\n  return (\r\n    <div className={s.mapWrapper}>\r\n      {coords.length !== 0 ? (\r\n        <YMaps>\r\n          <Map\r\n            defaultState={{\r\n              center: [coor[0][1], coor[0][0]],\r\n              zoom: 12,\r\n            }}\r\n            width=\"100%\"\r\n            instanceRef={map}\r\n          >\r\n            {coor.map((c, index) => {\r\n              return (\r\n                <Placemark\r\n                  key={index}\r\n                  geometry={[c[1], c[0]]}\r\n                  options={{\r\n                    iconLayout: \"default#image\",\r\n                    iconImageHref: map_marker,\r\n                    iconImageSize: [32, 32],\r\n                    useMapMarginInDragging: true,\r\n                  }}\r\n                  onClick={() => {\r\n                     handlerGetPointCoords(c);\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </Map>\r\n        </YMaps>\r\n      ) : (\r\n        <EmptyMap />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PointsMap;\r\n","import React, { useEffect } from \"react\";\r\nimport PointsMap from \"./Map\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCoords,\r\n  getCurPointCoords,\r\n  getAddress,\r\n} from \"../../Redux/location-reducer\";\r\n\r\nimport { setInputPointValue } from \"./../../Redux/orderPage-reducer\";\r\n\r\nconst PointsMapContainer = ({\r\n  getAddress,\r\n  setInputPointValue,\r\n  getCoords,\r\n  getCurPointCoords,\r\n  cityAdresses,\r\n  curPointAddress,\r\n  curPointCoords,\r\n  pointAddress,\r\n  city,\r\n  coords,\r\n}) => {\r\n  const handlerGetPointCoords = (coords) => {\r\n    getAddress(coords);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (curPointAddress) {\r\n      setInputPointValue(curPointAddress);\r\n    }\r\n  }, [curPointAddress]);\r\n\r\n  useEffect(() => {\r\n    if (cityAdresses.length > 0) {\r\n      cityAdresses.forEach((item) => {\r\n        getCoords(item.name, city);\r\n      });\r\n    }\r\n  }, [city]);\r\n\r\n  useEffect(() => {\r\n    if (pointAddress && pointAddress !== \"\") {\r\n      getCurPointCoords(pointAddress, city);\r\n    }\r\n  }, [pointAddress]);\r\n\r\n  return <PointsMap {...{\r\n    curPointAddress,\r\n    curPointCoords,\r\n    pointAddress,\r\n    city,\r\n    coords,\r\n  }} handlerGetPointCoords={handlerGetPointCoords} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  city: state.orderPage.currentInputCityValue,\r\n  cityAdresses: state.orderPage.cityAdresses,\r\n  coords: state.location.coords,\r\n  pointAddress: state.orderPage.currentInputPointValue,\r\n  curPointCoords: state.location.curAddressCoords,\r\n  curPointAddress: state.location.curPointAddress,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCoords,\r\n  getCurPointCoords,\r\n  getAddress,\r\n  setInputPointValue,\r\n})(PointsMapContainer);\r\n","\r\n// formating price: 30000 -> 30 000\r\nexport const XFormatPrice = (_number) => {\r\n  let decimal = 0;\r\n  let separator = \" \";\r\n  let decpoint = \".\";\r\n  let format_string = \"#\";\r\n\r\n  let r = parseFloat(_number);\r\n\r\n  let exp10 = Math.pow(10, decimal); // приводим к правильному множителю\r\n  r = Math.round(r * exp10) / exp10; // округляем до необходимого числа знаков после запятой\r\n\r\n  let rr = Number(r).toFixed(decimal).toString().split(\".\");\r\n\r\n  let b = rr[0].replace(/(\\d{1,3}(?=(\\d{3})+(?:\\.\\d|\\b)))/g, \"$1\" + separator);\r\n\r\n  r = rr[1] ? b + decpoint + rr[1] : b;\r\n  return format_string.replace(\"#\", r);\r\n};\r\n\r\n\r\n// makes valid img links (if not base64)\r\nexport const prepareImgLink = (imgLink) => {\r\n  if (imgLink.match('base64')) {\r\n    return imgLink\r\n  }\r\n  return `https://api-factory.simbirsoft1.com${imgLink}`\r\n};","import moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport \"moment-duration-format\";\r\nrequire(\"moment-duration-format\");\r\n\r\nexport const diffDateFormat = (date) => {\r\n\r\n  let days = \"д\";\r\n  let hours = \"ч\";\r\n  let minutes = \"м\";\r\n\r\n  let countDays = \"\";\r\n  let countHours = \"\";\r\n  let countMinutes = \"\";\r\n\r\n  countDays = Math.floor(date.asDays());\r\n  date.subtract(moment.duration(days, \"days\"));\r\n\r\n  countHours = date.hours();\r\n  date.subtract(moment.duration(hours, \"hours\"));\r\n\r\n  countMinutes = date.minutes();\r\n  date.subtract(moment.duration(minutes, \"minutes\"));\r\n\r\n  if (countDays < 1) {\r\n    countDays = \"\";\r\n    days = \"\";\r\n  }\r\n\r\n  if (countHours === 0) {\r\n    countHours = \"\";\r\n    hours = \"\";\r\n  }\r\n\r\n  if (countMinutes === 0) {\r\n    countMinutes = \"\";\r\n    minutes = \"\";\r\n  }\r\n\r\n  let finalDate = `${countDays}${days} ${countHours}${hours} ${countMinutes}${minutes}`;\r\n\r\n  return finalDate;\r\n};\r\n","import { XFormatPrice } from \"./scripts\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport \"moment-duration-format\";\r\nrequire(\"moment-duration-format\");\r\n\r\nexport const calcPrice = (rate, diffDate, priceMin, addParams) => {\r\n  let price = 0;\r\n  let paramsPrice = 0;\r\n  let days = \"\";\r\n  let weeks = \"\";\r\n  let minutes = \"\";\r\n  const ONE_WEEK = 1000 * 60 * 60 * 24 * 7;\r\n  const ONE_MINUTE = 1000 * 60;\r\n  addParams.map((param) => {\r\n    if (param.checked) {\r\n      paramsPrice += param.price;\r\n    }\r\n  });\r\n  switch (rate) {\r\n    case \"На сутки\": {\r\n      if (diffDate._data.hours !== 0 || diffDate._data.minutes !== 0) {\r\n        days = diffDate._data.days + 1;\r\n      } else days = diffDate._data.days;\r\n     \r\n      price = priceMin + (days * 1999) + paramsPrice;\r\n      return XFormatPrice(price);\r\n    }\r\n    case \"Недельный Плюс\": {\r\n       weeks =  Math.ceil(diffDate._milliseconds / ONE_WEEK);\r\n       price = priceMin + (weeks * 7500) + paramsPrice;\r\n       return XFormatPrice(price);\r\n    }\r\n    case \"Поминутно\": {\r\n        minutes = diffDate._milliseconds / ONE_MINUTE;\r\n        price = priceMin + (minutes * 7) + paramsPrice;\r\n        return XFormatPrice(price);\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./OrderInfo.module.scss\";\r\nimport { XFormatPrice } from \"../../commonScripts/scripts.js\";\r\nimport { diffDateFormat } from \"../../commonScripts/diffDateFormat.js\";\r\nimport { calcPrice } from \"./../../commonScripts/calcPrice\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport \"moment-duration-format\";\r\nrequire(\"moment-duration-format\");\r\n\r\nconst OrderInfo = ({\r\n  city,\r\n  address,\r\n  color,\r\n  rate,\r\n  available,\r\n  btnName,\r\n  btnLink,\r\n  addParams,\r\n  diffDate,\r\n  currentModel,\r\n  noLink,\r\n  isConfirmFormActive,\r\n  setConfirmFormActive,\r\n  confirmData,\r\n  orderData,\r\n}) => {\r\n  if (orderData && orderData.length !== 0) {\r\n    city = orderData.data.cityId.name;\r\n    address = orderData.data.pointId.address;\r\n    currentModel.name = orderData.data.carId.name;\r\n    color = orderData.data.color;\r\n    diffDate = moment.duration(\r\n      moment(orderData.data.dateTo).diff(moment(orderData.data.dateFrom))\r\n    );\r\n    rate = orderData.data.rateId.rateTypeId.name;\r\n    addParams.map((param) => {\r\n      if (orderData.data.isFullTank) {\r\n        if (param.id === 12) {\r\n          return (param.checked = orderData.data.isFullTank);\r\n        }\r\n      }\r\n      if (orderData.data.isNeedChildChair) {\r\n        if (param.id === 23) {\r\n          return (param.checked = orderData.data.isNeedChildChair);\r\n        }\r\n      }\r\n      if (orderData.data.isRightWheel) {\r\n        if (param.id === 33) {\r\n          return (param.checked = orderData.data.isRightWheel);\r\n        }\r\n      }\r\n    });\r\n    currentModel.priceMin = orderData.data.carId.priceMin;\r\n  }\r\n  return (\r\n    <div className={s.orderInfoWrapper}>\r\n      <span className={s.yourOrderText}>Ваш заказ:</span>\r\n      <ul>\r\n        <li>\r\n          <div className={`${s.liName} ${s.liPointName}`}>Пункт выдачи</div>\r\n          <div className={s.addressDots}></div>\r\n          <div className={s.addressOrderInfo}>\r\n            {city && address && (\r\n              <>\r\n                <span className={s.orderInfoCity}>{city},</span>\r\n                <span>{address}</span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </li>\r\n        {currentModel.name && (\r\n          <li>\r\n            <div className={s.liName}>Модель</div>\r\n            <div></div>\r\n            <div className={`${s.addressOrderInfo} ${s.attrSpan}`}>\r\n              <span>{currentModel.name}</span>\r\n            </div>\r\n          </li>\r\n        )}\r\n        {color && (\r\n          <li>\r\n            <div className={s.liName}>Цвет</div>\r\n            <div></div>\r\n            <div className={`${s.addressOrderInfo} ${s.attrSpan}`}>\r\n              <span>{color[0].toUpperCase() + color.slice(1)}</span>\r\n            </div>\r\n          </li>\r\n        )}\r\n        {diffDate.length !== 0 && (\r\n          <li>\r\n            <div className={s.liName}>Длительность аренды</div>\r\n            <div></div>\r\n            <div className={`${s.addressOrderInfo} ${s.attrSpan}`}>\r\n              <span>{diffDateFormat(diffDate)}</span>\r\n            </div>\r\n          </li>\r\n        )}\r\n        {rate && (\r\n          <li>\r\n            <div className={s.liName}>Тариф</div>\r\n            <div></div>\r\n            <div className={`${s.addressOrderInfo} ${s.attrSpan}`}>\r\n              <span>{rate}</span>\r\n            </div>\r\n          </li>\r\n        )}\r\n\r\n        {addParams.map(({ name, id, checked }) => {\r\n          if (checked)\r\n            return (\r\n              <li key={id}>\r\n                <div className={s.liName}>{name}</div>\r\n                <div></div>\r\n                <div className={`${s.addressOrderInfo} ${s.attrSpan}`}>\r\n                  <span>Да</span>\r\n                </div>\r\n              </li>\r\n            );\r\n        })}\r\n      </ul>\r\n\r\n      {rate !== \"\" && diffDate && (\r\n        <div className={s.modelPrice}>\r\n          <span className={s.price}>Цена: </span>\r\n          <span className={s.priceBorder}>\r\n            {calcPrice(rate, diffDate, currentModel.priceMin, addParams)} ₽\r\n          </span>\r\n        </div>\r\n      )}\r\n      {currentModel.priceMin && currentModel.priceMax && (\r\n        <div\r\n          className={\r\n            rate && diffDate\r\n              ? `${s.modelPrice} ${s.modelPriceHide}`\r\n              : s.modelPrice\r\n          }\r\n        >\r\n          <span className={s.price}>Цена: </span>\r\n          <span className={s.priceBorder}>\r\n            от {XFormatPrice(currentModel.priceMin)} до{\" \"}\r\n            {XFormatPrice(currentModel.priceMax)} ₽\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {orderData && orderData.length !== 0 ? (\r\n        <button className={`${s.orderInfoBtn} ${s.redBtn}`}>Отменить</button>\r\n      ) : null}\r\n      {noLink ? (\r\n        <button\r\n          className={\r\n            (orderData.length !== 0)\r\n              ? s.hideBtn\r\n              : s.orderInfoBtn\r\n          }\r\n          onClick={() => setConfirmFormActive(!isConfirmFormActive)}\r\n        >\r\n          Заказать\r\n        </button>\r\n      ) : (\r\n        <NavLink\r\n          to={\"/need-for-drive/bookCar/\" + btnLink}\r\n          className={\r\n            available ? `${s.orderInfoBtn} ${s.disabled}` : s.orderInfoBtn\r\n          }\r\n        >\r\n          {btnName}\r\n        </NavLink>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React, { useEffect } from \"react\";\r\nimport OrderInfo from \"./OrderInfo\";\r\nimport { connect } from \"react-redux\";\r\nimport { setConfirmFormActive } from \"../../Redux/orderPage-reducer\";\r\nimport { setResultPrice } from \"../../Redux/model-reducer\";\r\nimport { calcPrice } from \"./../../commonScripts/calcPrice\";\r\n\r\nconst OrderInfoContainer = ({\r\n  city,\r\n  address,\r\n  color,\r\n  rate,\r\n  available,\r\n  btnName,\r\n  btnLink,\r\n  noLink,\r\n  addParams,\r\n  diffDate,\r\n  currentModel,\r\n  isConfirmFormActive,\r\n  setConfirmFormActive,\r\n  setResultPrice,\r\n  confirmData,\r\n  orderData,\r\n}) => {\r\n  useEffect(() => {\r\n    if (rate && diffDate && currentModel.priceMin && addParams)\r\n      setResultPrice(\r\n        calcPrice(rate, diffDate, currentModel.priceMin, addParams)\r\n      );\r\n  }, [rate, diffDate, addParams]);\r\n  return (\r\n    <OrderInfo\r\n      {...{\r\n        city,\r\n        address,\r\n        color,\r\n        rate,\r\n        available,\r\n        btnName,\r\n        btnLink,\r\n        noLink,\r\n        addParams,\r\n        diffDate,\r\n        currentModel,\r\n        isConfirmFormActive,\r\n        setConfirmFormActive,\r\n        confirmData,\r\n        orderData,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  city: state.orderPage.currentInputCityValue,\r\n  address: state.orderPage.currentInputPointValue,\r\n  color: state.model.color,\r\n  rate: state.model.rate,\r\n  addParams: state.model.additionalParameters,\r\n  diffDate: state.model.diffDate,\r\n  currentModel: state.model.currentModel,\r\n  isConfirmFormActive: state.orderPage.isConfirmFormActive,\r\n  confirmData: state.confirm.confirmData,\r\n  orderData: state.confirm.orderData,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setConfirmFormActive,\r\n  setResultPrice,\r\n})(OrderInfoContainer);\r\n","import React, { useState } from \"react\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport Autocomplete from \"../../Components/AutoComplete/Autocomplete\";\r\nimport clean_input from \"../../Images/clean_input.svg\";\r\nimport s from \"./BookPageLocation.module.scss\";\r\nimport PointsMapContainer from \"./../../Components/Map/PointsMapContainer\";\r\nimport OrderInfoContainer from \"./../../Components/OrderInfo/OrderInfoContainer\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst BookPageLocation = ({\r\n  cities,\r\n  points,\r\n  isModelAvail,\r\n  inputCityValue,\r\n  inputPointValue,\r\n  setCityAdresses,\r\n  setInputPointValue,\r\n  setInputCityValue,\r\n  setModelAvailable,\r\n  resetCoords,\r\n  setCurPointAddress,\r\n  setCurPointCoords,\r\n  setCarColor,\r\n  setDiffDate,\r\n  setCarRate,\r\n  unsetCarParams,\r\n  setCurrentModel,\r\n  setStartDate,\r\n  setEndDate,\r\n}) => {\r\n  const [curCityInputValue, setCurCityValue] = useState(inputCityValue);\r\n  const [curPointInputValue, setCurPointValue] = useState(inputPointValue);\r\n  const [isInputCityAutoCompleteOpen, setInputCityAutoCompleteIsOpen] =\r\n    useState(false);\r\n  const [isInputPointAutoCompleteOpen, setInputPointAutoCompleteIsOpen] =\r\n    useState(false);\r\n\r\n  // choose cities including chars from input\r\n  const filteredCities = cities.data.filter(({ name }) => {\r\n    return name.toLowerCase().includes(curCityInputValue.toLowerCase());\r\n  });\r\n\r\n  //choose point adress for current chosen city\r\n  let filteredPoints = [];\r\n  points.data.filter(({ cityId, address }) => {\r\n    if (cityId != null && cityId.name === curCityInputValue) {\r\n      filteredPoints.push(address);\r\n    }\r\n  });\r\n  const arrKey = \"name\";\r\n  const point = filteredPoints.map((item) => ({ [arrKey]: item.toString() }));\r\n  setCityAdresses(point);\r\n\r\n  // show filtered cities and put selected in redux state\r\n  const itemCityAutoСompleteClickHandler = (e) => {\r\n    setCurCityValue(e.target.textContent);\r\n    setInputCityValue(e.target.textContent);\r\n    setInputCityAutoCompleteIsOpen(!isInputCityAutoCompleteOpen);\r\n  };\r\n\r\n  // show filtered points and put selected in redux state\r\n  const itemPointAutoСompleteClickHandler = (e) => {\r\n    setCurPointValue(e.target.textContent);\r\n    setInputPointValue(e.target.textContent);\r\n    setInputPointAutoCompleteIsOpen(!isInputPointAutoCompleteOpen);\r\n  };\r\n\r\n  //to show autocomplete component for city input\r\n  const cityInputClickHandler = () => {\r\n    setInputCityAutoCompleteIsOpen(true);\r\n  };\r\n\r\n  //to show autocomplete component for city input\r\n  const pointInputClickHandler = () => {\r\n    setInputPointAutoCompleteIsOpen(true);\r\n  };\r\n\r\n  // make model step available\r\n  useEffect(() => {\r\n    if (\r\n      inputCityValue !== \"\" &&\r\n      curCityInputValue === inputCityValue &&\r\n      inputPointValue !== \"\"\r\n    )\r\n      setModelAvailable(false);\r\n  }, [inputPointValue]);\r\n\r\n  // clean_city_input_on_btn_click\r\n  const cityBtnClickHandler = () => {\r\n    setModelAvailable(true);\r\n    resetCoords();\r\n    setInputCityValue(\"\");\r\n    setInputPointValue(\"\");\r\n    setCurrentModel(\"\");\r\n    setCurCityValue(\"\");\r\n    setCurPointValue(\"\");\r\n    setCurPointAddress(\"\");\r\n    setCurPointCoords(\"\");\r\n    setCarColor(\"\");\r\n    setDiffDate(\"\");\r\n    setCarRate(\"\");\r\n    unsetCarParams();\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n  };\r\n  // clean_point_input_on_btn_click\r\n  const pointBtnClickHandler = () => {\r\n    setModelAvailable(true);\r\n    setCurrentModel(\"\");\r\n    setInputPointValue(\"\");\r\n    setCurPointValue(\"\");\r\n    setCurPointAddress(\"\");\r\n    setCurPointCoords(\"\");\r\n    setCarColor(\"\");\r\n    setDiffDate(\"\");\r\n    setCarRate(\"\");\r\n    unsetCarParams();\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n  };\r\n\r\n  const hideAutocomplete = () => {\r\n    setInputCityAutoCompleteIsOpen(false);\r\n    setInputPointAutoCompleteIsOpen(false);\r\n  };\r\n\r\n  const bacspaceCityDel = (e) => {\r\n    let count = 0;\r\n    if (e.keyCode === 8) {\r\n      count++;\r\n      if (count === curCityInputValue.length) {\r\n        setModelAvailable(true);\r\n        resetCoords();\r\n        setCurrentModel(\"\");\r\n        setInputCityValue(\"\");\r\n        setInputPointValue(\"\");\r\n        setCurCityValue(\"\");\r\n        setCurPointValue(\"\");\r\n        setCurPointAddress(\"\");\r\n        setCurPointCoords(\"\");\r\n        setCarColor(\"\");\r\n        setDiffDate(\"\");\r\n        setCarRate(\"\");\r\n        unsetCarParams();\r\n        setStartDate(\"\");\r\n        setEndDate(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const bacspacePointDel = (e) => {\r\n    let count = 0;\r\n    if (e.keyCode === 8) {\r\n      count++;\r\n      if (count === curPointInputValue.length) {\r\n        setModelAvailable(true);\r\n        setCurrentModel(\"\");\r\n        setInputPointValue(\"\");\r\n        setCurPointValue(\"\");\r\n        setCurPointAddress(\"\");\r\n        setCurPointCoords(\"\");\r\n        setCarColor(\"\");\r\n        setDiffDate(\"\");\r\n        setCarRate(\"\");\r\n        unsetCarParams();\r\n        setStartDate(\"\");\r\n        setEndDate(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.findLocationFormWrapper}>\r\n      <div className={s.locationContainer}>\r\n        <div className={s.findLocationFormContainer} onClick={hideAutocomplete}>\r\n          <div className={s.formContainer} onClick={(e) => e.stopPropagation()}>\r\n            <div className={s.fieldWrapper}>\r\n              <label>Город</label>\r\n              <div className={s.inputField}>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  value={curCityInputValue}\r\n                  placeholder=\"Начните вводить город\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(event) => setCurCityValue(event.target.value)}\r\n                  onClick={cityInputClickHandler}\r\n                  onKeyDown={bacspaceCityDel}\r\n                />\r\n                <button\r\n                  onClick={cityBtnClickHandler}\r\n                  className={s.cleanInputBtn}\r\n                >\r\n                  <ReactSVG src={clean_input} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <Autocomplete\r\n              filteredValues={filteredCities}\r\n              itemClickHandler={itemCityAutoСompleteClickHandler}\r\n              value={curCityInputValue}\r\n              isOpen={isInputCityAutoCompleteOpen}\r\n              setOpen={setInputCityAutoCompleteIsOpen}\r\n            />\r\n          </div>\r\n          <div className={s.formContainer} onClick={(e) => e.stopPropagation()}>\r\n            <div className={s.fieldWrapper}>\r\n              <label>Пункт выдачи</label>\r\n              <div className={s.inputField}>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"point\"\r\n                  value={curPointInputValue || inputPointValue}\r\n                  placeholder=\"Начните вводить пункт...\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(event) => setCurPointValue(event.target.value)}\r\n                  onClick={pointInputClickHandler}\r\n                  onKeyDown={bacspacePointDel}\r\n                />\r\n                <button\r\n                  onClick={pointBtnClickHandler}\r\n                  className={s.cleanInputBtn}\r\n                >\r\n                  <ReactSVG src={clean_input} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <Autocomplete\r\n              filteredValues={point}\r\n              itemClickHandler={itemPointAutoСompleteClickHandler}\r\n              value={curPointInputValue}\r\n              isOpen={isInputPointAutoCompleteOpen}\r\n            />\r\n          </div>\r\n          <div className={s.mapContainer}>\r\n            <label>Выбрать на карте:</label>\r\n            <PointsMapContainer />\r\n          </div>\r\n        </div>\r\n\r\n        <OrderInfoContainer\r\n          btnName=\"Выбрать модель\"\r\n          available={isModelAvail}\r\n          btnLink=\"Model\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BookPageLocation;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCitiesThunkCreator,\r\n  getPointsThunkCreator,\r\n  setModelAvailable,\r\n  setInputCityValue,\r\n  setInputPointValue,\r\n  setCityAdresses,\r\n} from \"../../Redux/orderPage-reducer\";\r\nimport { resetCoords, setCurPointCoords } from \"../../Redux/location-reducer\";\r\nimport {\r\n  setCarColor,\r\n  setDiffDate,\r\n  setCarRate,\r\n  unsetCarParams,\r\n  setCurrentModel,\r\n  setStartDate,\r\n  setEndDate,\r\n} from \"../../Redux/model-reducer.js\";\r\nimport { setCurPointAddress } from \"../../Redux/location-reducer\";\r\nimport Preloader from \"./../../Components/Preloader/Preloader\";\r\nimport BookPageLocation from \"./BookPageLocation\";\r\n\r\nconst BookPageLocationContainer = ({\r\n  getCitiesThunkCreator,\r\n  getPointsThunkCreator,\r\n  cities,\r\n  points,\r\n  isModelAvail,\r\n  inputCityValue,\r\n  inputPointValue,\r\n  setCityAdresses,\r\n  setInputCityValue,\r\n  setModelAvailable,\r\n  resetCoords,\r\n  setInputPointValue,\r\n  setCurPointAddress,\r\n  setCurPointCoords,\r\n  setCarColor,\r\n  setDiffDate,\r\n  setCarRate,\r\n  unsetCarParams,\r\n  setCurrentModel,\r\n  setStartDate,\r\n  setEndDate,\r\n}) => {\r\n  useEffect(() => {\r\n    getCitiesThunkCreator();\r\n    getPointsThunkCreator();\r\n  }, []); //зависимости?!\r\n\r\n  useEffect(() => {}, [inputPointValue]);\r\n\r\n  if (!cities || cities.length === 0 || !points || points.length === 0) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <>\r\n      <BookPageLocation\r\n        {...{\r\n          cities,\r\n          points,\r\n          isModelAvail,\r\n          inputCityValue,\r\n          inputPointValue,\r\n          setCityAdresses,\r\n          setInputPointValue,\r\n          setInputCityValue,\r\n          setModelAvailable,\r\n          resetCoords,\r\n          setCurPointAddress,\r\n          setCurPointCoords,\r\n          setCarColor,\r\n          setDiffDate,\r\n          setCarRate,\r\n          unsetCarParams,\r\n          setCurrentModel,\r\n          setStartDate,\r\n          setEndDate,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cities: state.orderPage.cities,\r\n  points: state.orderPage.points,\r\n  location: state.location.geolocation,\r\n  isModelAvail: state.orderPage.isModelAvailable,\r\n  inputCityValue: state.orderPage.currentInputCityValue,\r\n  inputPointValue: state.orderPage.currentInputPointValue,\r\n  curPointAddress: state.location.curPointAddress,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCitiesThunkCreator,\r\n  getPointsThunkCreator,\r\n  setModelAvailable,\r\n  setInputCityValue,\r\n  setInputPointValue,\r\n  setCityAdresses,\r\n  resetCoords,\r\n  setCurPointAddress,\r\n  setCurPointCoords,\r\n  setCarColor,\r\n  setDiffDate,\r\n  setCarRate,\r\n  unsetCarParams,\r\n  setCurrentModel,\r\n  setStartDate,\r\n  setEndDate,\r\n})(BookPageLocationContainer);\r\n","import React from \"react\";\r\nimport s from \"./BookingStages.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst BookingStages = ({\r\n  isModelAvail,\r\n  currentModel,\r\n  color,\r\n  rate,\r\n  diffDate,\r\n  confirmData,\r\n  orderData\r\n}) => {\r\n  if(orderData && orderData.length) {\r\n    confirmData.data.id = orderData.data.id;\r\n  }\r\n  return (\r\n    <div className={s.orderStepsWrapper}>\r\n      <div className={s.orderStepsContainer}>\r\n        {orderData && orderData.length !== 0 ?  (\r\n          <div className={s.yourOrderText}>\r\n            Заказ номер RU{orderData.data.id}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className={s.orderStep}>\r\n              <NavLink to=\"/need-for-drive/bookCar/\">Местоположение</NavLink>\r\n            </div>\r\n\r\n            <div className={s.orderStep}>\r\n              <NavLink\r\n                to=\"/need-for-drive/bookCar/Model\"\r\n                className={isModelAvail ? s.disabled : \"\"}\r\n              >\r\n                Модель{\" \"}\r\n              </NavLink>\r\n            </div>\r\n\r\n            <div className={s.orderStep}>\r\n              <NavLink\r\n                to=\"/need-for-drive/bookCar/Additionally\"\r\n                className={!currentModel.name ? s.disabled : \"\"}\r\n              >\r\n                Дополнительно\r\n              </NavLink>\r\n            </div>\r\n\r\n            <div className={s.orderStep}>\r\n              <NavLink\r\n                to=\"/need-for-drive/bookCar/OrderResult\"\r\n                className={\r\n                  !diffDate ||\r\n                  (diffDate === \"\" && !color) ||\r\n                  (color === \"\" && !rate) ||\r\n                  rate === \"\"\r\n                    ? s.disabled\r\n                    : \"\"\r\n                }\r\n              >\r\n                Итого\r\n              </NavLink>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingStages;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport BookingStages from \"./BookingStages\";\r\n\r\nconst BookingStagesContainer = ({\r\n  isModelAvail,\r\n  currentModel,\r\n  color,\r\n  rate,\r\n  diffDate,\r\n  confirmData,\r\n  orderData\r\n}) => {\r\n  return (\r\n    <BookingStages {...{ isModelAvail, currentModel, color, rate, diffDate,confirmData, orderData }} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isModelAvail: state.orderPage.isModelAvailable,\r\n  currentModel: state.model.currentModel,\r\n  color: state.model.color,\r\n  rate: state.model.rate,\r\n  diffDate: state.model.diffDate,\r\n  confirmData: state.confirm.confirmData,\r\n  orderData: state.confirm.orderData,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BookingStagesContainer);\r\n","import React from \"react\";\r\nimport s from \"./RadioInput.module.scss\";\r\n\r\nconst RadioInput = ({\r\n  inputName,\r\n  id,\r\n  currentInputType,\r\n  handleChange,\r\n  ratePrice,\r\n  rateUnit,\r\n}) => {\r\n  return (\r\n    <div className={s.checkBoxWrapper}>\r\n      <input\r\n        type=\"radio\"\r\n        className={s.checkBox}\r\n        value={inputName}\r\n        id={id}\r\n        checked={currentInputType === inputName}\r\n        onChange={handleChange}\r\n      />\r\n      {ratePrice && rateUnit ? (\r\n        <label\r\n          htmlFor={id}\r\n          className={\r\n            currentInputType === inputName ? s.radiLabel : `${s.radiLabel} ${s.notActiveLable}`\r\n          }\r\n        >\r\n          {inputName}, {ratePrice}₽/{rateUnit}\r\n        </label>\r\n      ) : (\r\n        <label\r\n          htmlFor={id}\r\n          className={\r\n            currentInputType === inputName ? s.radiLabel : `${s.radiLabel} ${s.notActiveLable}`\r\n          }\r\n        >\r\n          {inputName[0].toUpperCase() + inputName.slice(1)}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","import React, { useState } from \"react\";\r\nimport OrderInfoContainer from \"../../Components/OrderInfo/OrderInfoContainer\";\r\nimport RadioInput from \"../../Components/RaioInput/RadioInput\";\r\nimport s from \"./ModelPage.module.scss\";\r\nimport { XFormatPrice } from \"../../commonScripts/scripts.js\";\r\nimport { prepareImgLink } from \"../../commonScripts/scripts.js\";\r\n\r\nconst BookPageModel = ({\r\n  models,\r\n  setCarColor,\r\n  categories,\r\n  modelName,\r\n  setDiffDate,\r\n  setCarRate,\r\n  unsetCarParams,\r\n  setCurrentModel,\r\n  currentModel,\r\n  setStartDate,\r\n  setEndDate,\r\n}) => {\r\n  const [currentModelType, setModelType] = useState(\"Все модели\");\r\n  const handleChange = (e) => {\r\n    setModelType(e.target.value);\r\n  };\r\n\r\n  let filteredCars = [];\r\n  models.data.filter((m) => {\r\n    if (currentModelType === \"Все модели\") {\r\n      filteredCars.push(m);\r\n    } else if (m.categoryId.name === currentModelType) {\r\n      filteredCars.push(m);\r\n    }\r\n  });\r\n\r\n  const modelClickHandler = (car) => {\r\n    setCurrentModel(car);\r\n    setCarColor(\"\");\r\n    setDiffDate(\"\");\r\n    setCarRate(\"\");\r\n    unsetCarParams();\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.modelPageWrapper}>\r\n      <div className={s.modelPageContainer}>\r\n        <div className={s.modelCarChoose}>\r\n          <div className={s.checkBoxesWrapper}>\r\n            <RadioInput\r\n              id={1}\r\n              inputName=\"Все модели\"\r\n              currentInputType={currentModelType}\r\n              handleChange={handleChange}\r\n            />\r\n            {categories.data.map(({ id, name }) => {\r\n              return (\r\n                <RadioInput\r\n                  key={id}\r\n                  id={id}\r\n                  inputName={name}\r\n                  currentInputType={currentModelType}\r\n                  handleChange={handleChange}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className={s.modelCarImagesWrapper}>\r\n            {filteredCars.map((car) => {\r\n              const {id, name, priceMin, priceMax, thumbnail} = car;\r\n              return (\r\n                <button\r\n                  key={id}\r\n                  className={s.modelCarBlock}\r\n                  onClick={() => modelClickHandler(car)}\r\n                >\r\n                  <div className={s.carInfo}>\r\n                    <span className={s.carModelName}>\r\n                      {car.name.toUpperCase()}\r\n                    </span>\r\n                    <span className={s.carModelPrice}>\r\n                      {XFormatPrice(priceMin)} -{\" \"}\r\n                      {XFormatPrice(priceMax)} ₽\r\n                    </span>\r\n                  </div>\r\n                  <div\r\n                    className={s.carImg}\r\n                    style={{\r\n                      backgroundImage: `url(${prepareImgLink(\r\n                        thumbnail.path\r\n                      )})`,\r\n                    }}\r\n                  ></div>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <OrderInfoContainer\r\n          btnName=\"Дополнительно\"\r\n          available={!currentModel.name}\r\n          btnLink=\"Additionally\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookPageModel;\r\n","import React from \"react\";\r\nimport BookPageModel from \"./Model\";\r\nimport {\r\n  getCars,\r\n  setCarColor,\r\n  setDiffDate,\r\n  setCarRate,\r\n  unsetCarParams,\r\n  setCurrentModel,\r\n  setStartDate,\r\n  setEndDate,\r\n} from \"./../../Redux/model-reducer\";\r\nimport { getCategories } from \"./../../Redux/orderPage-reducer\";\r\nimport { useEffect } from \"react\";\r\nimport Preloader from \"./../../Components/Preloader/Preloader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst BookPageModelContainer = ({\r\n  getCategories,\r\n  getCars,\r\n  models,\r\n  setCarColor,\r\n  categories,\r\n  modelName,\r\n  setDiffDate,\r\n  setCarRate,\r\n  unsetCarParams,\r\n  setCurrentModel,\r\n  currentModel,\r\n  setStartDate,\r\n  setEndDate,\r\n}) => {\r\n  useEffect(() => {\r\n    getCategories();\r\n    getCars();\r\n  }, []);\r\n\r\n  if (\r\n    !models ||\r\n    models.length === 0 ||\r\n    !categories ||\r\n    categories.length === 0\r\n  ) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <BookPageModel\r\n      {...{\r\n        models,\r\n        setCarColor,\r\n        categories,\r\n        modelName,\r\n        setDiffDate,\r\n        setCarRate,\r\n        unsetCarParams,\r\n        setCurrentModel,\r\n        currentModel,\r\n        setStartDate,\r\n        setEndDate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  models: state.model.models,\r\n  categories: state.orderPage.categories,\r\n  currentModel: state.model.currentModel,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCars,\r\n  getCategories,\r\n  setCarColor,\r\n  setDiffDate,\r\n  setCarRate,\r\n  unsetCarParams,\r\n  setCurrentModel,\r\n  setStartDate,\r\n  setEndDate,\r\n})(BookPageModelContainer);\r\n","import React from \"react\";\r\nimport s from \"./CheckBoxInput.module.scss\";\r\n\r\nconst CheckBoxInput = ({\r\n  inputName,\r\n  id,\r\n  price,\r\n  handleChange,\r\n  currentInputType,\r\n  checked\r\n}) => {\r\n  return (\r\n    <div className={s.checkBoxWrapper}>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={s.checkBoxInput}\r\n        value={inputName}\r\n        defaultChecked={checked}\r\n        id={id}\r\n        onClick={(event) => handleChange(event, id)}\r\n      />\r\n      <label className={s.checkBoxLabel} htmlFor={id}>\r\n        {inputName}, {price}р\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBoxInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ru from \"date-fns/locale/ru\";\r\n\r\nimport RadioInput from \"../../Components/RaioInput/RadioInput\";\r\nimport OrderInfoContainer from \"./../../Components/OrderInfo/OrderInfoContainer\";\r\nimport s from \"./Additional.module.scss\";\r\nimport baseInput from \"../BookPageLocation/BookPageLocation.module.scss\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport clean_input from \"../../Images/clean_input.svg\";\r\nimport CheckBoxInput from \"../../Components/CheckBoxInput/CheckBoxInput\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport \"moment-duration-format\";\r\nrequire(\"moment-duration-format\");\r\n\r\nconst Additional = ({\r\n  cars,\r\n  rate,\r\n  color,\r\n  setCarColor,\r\n  setCarRate,\r\n  addParams,\r\n  setCarParams,\r\n  setDiffDate,\r\n  currentModel,\r\n  diffDate,\r\n  modelRate,\r\n  startDateRedux,\r\n  endDateRedux,\r\n  setStartDate,\r\n  setEndDate,\r\n  setCarRateId,\r\n}) => {\r\n  registerLocale(\"ru\", ru);\r\n  moment.locale(\"ru\");\r\n  let filteredColors = [];\r\n\r\n  const [currentColor, setColor] = useState(color);\r\n  const handleColorChange = (e) => {\r\n    setColor(e.target.value);\r\n    setCarColor(e.target.value);\r\n  };\r\n\r\n  const [currentRate, setRate] = useState(modelRate);\r\n  const handleRateChange = (e, rateName, rateId) => {\r\n    setRate(e.target.value);\r\n    setCarRate(rateName);\r\n    setCarRateId(rateId);\r\n  };\r\n\r\n  const [isChecked, setCheck] = useState(\"\");\r\n  const handleParamsChange = (e, id) => {\r\n    setCheck(e.target.value);\r\n    setCarParams(parseInt(id));\r\n  };\r\n\r\n  const [startDate, setCurStartDate] = useState(startDateRedux);\r\n  const [endDate, setCurEndDate] = useState(endDateRedux);\r\n\r\n  const handleStartDate = (date) => {\r\n    setCurStartDate(date);\r\n    setStartDate(date);\r\n    setDiffDate(\"\");\r\n    setActive(true);\r\n    setCurEndDate(\"\");\r\n  };\r\n\r\n  const handleEndDate = (date) => {\r\n    setCurEndDate(date);\r\n    setEndDate(date);\r\n  };\r\n\r\n  const handleStartDateCleanBtn = () => {\r\n    setCurStartDate(\"\");\r\n    setCurEndDate(\"\");\r\n    setEndDate(\"\");\r\n    setStartDate(\"\");\r\n    setDiffDate(\"\");\r\n  };\r\n\r\n  const handleEndDateCleanBtn = () => {\r\n    setCurEndDate(\"\");\r\n    setEndDate(\"\");\r\n    setDiffDate(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startDate && endDate) {\r\n      const diff = moment.duration(moment(endDate).diff(moment(startDate)));\r\n      setDiffDate(diff);\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  const [isCalenadarActive, setActive] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (startDate || startDate !== \"\") setActive(false);\r\n  }, [startDate]);\r\n\r\n  const filterPassedTime = (time) => {\r\n    const selectedDate = new Date(time);\r\n    return startDate.getTime() < selectedDate.getTime();\r\n  };\r\n\r\n  const [isTest, setIsTest] = useState(true);\r\n  useEffect(() => {\r\n    if (modelRate !== \"\" && color !== \"\" && diffDate !== \"\") setIsTest(false);\r\n  }, [color, modelRate, diffDate]);\r\n\r\n  return (\r\n    <div className={s.additionalPageWrapepr}>\r\n      <div className={s.additionalPageContainer}>\r\n        <div className={s.additionalParameters}>\r\n          <div className={s.additionalBlock}>\r\n            {currentModel.colors.length === 0 ? (\r\n              <RadioInput\r\n                id={10}\r\n                inputName=\"Любой\"\r\n                currentInputType={currentColor}\r\n                handleChange={handleColorChange}\r\n              />\r\n            ) : (\r\n              <>\r\n                <span>Цвет</span>\r\n                <div\r\n                  className={`${s.checkBoxesWrapper} ${s.additionalInputBlock}`}\r\n                >\r\n                  <RadioInput\r\n                    id={10}\r\n                    inputName=\"Любой\"\r\n                    currentInputType={currentColor}\r\n                    handleChange={handleColorChange}\r\n                  />\r\n                  {currentModel.colors\r\n                    ? currentModel.colors.map((color, index) => {\r\n                        return (\r\n                          <RadioInput\r\n                            key={index}\r\n                            id={index}\r\n                            value={currentColor || color}\r\n                            inputName={color}\r\n                            currentInputType={currentColor}\r\n                            handleChange={handleColorChange}\r\n                          />\r\n                        );\r\n                      })\r\n                    : null}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={s.additionalBlock}>\r\n            <span>Дата аренды</span>\r\n            <div className={`${s.dataPickWrapper} ${s.additionalInputBlock}`}>\r\n              <div className={s.dataFieldWrapper}>\r\n                <label>С</label>\r\n                <div className={s.dataInputField}>\r\n                  <DatePicker\r\n                    placeholderText=\"Введите дату и время\"\r\n                    locale=\"ru\"\r\n                    clearButtonClassName={baseInput.cleanInputBtn}\r\n                    selected={startDate}\r\n                    minDate={new Date()}\r\n                    onChange={(date) => handleStartDate(date)}\r\n                    showTimeSelect\r\n                    dateFormat=\"dd.MM.yyyy HH:mm\"\r\n                  />\r\n                  <button\r\n                    className={baseInput.cleanInputBtn}\r\n                    onClick={handleStartDateCleanBtn}\r\n                  >\r\n                    <ReactSVG src={clean_input} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className={s.dataFieldWrapper}>\r\n                <label>По</label>\r\n                <div className={s.dataInputField}>\r\n                  <DatePicker\r\n                    placeholderText=\"Введите дату и время\"\r\n                    locale=\"ru\"\r\n                    selected={endDate}\r\n                    minDate={startDate}\r\n                    filterTime={filterPassedTime}\r\n                    disabled={isCalenadarActive}\r\n                    onChange={(date) => handleEndDate(date)}\r\n                    showTimeSelect\r\n                    dateFormat=\"dd.MM.yyyy HH:mm \"\r\n                  />\r\n                  <button\r\n                    className={baseInput.cleanInputBtn}\r\n                    onClick={handleEndDateCleanBtn}\r\n                  >\r\n                    <ReactSVG src={clean_input} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={s.additionalBlock}>\r\n            <span className={`${s.additionalInputBlock}`}>Тариф</span>\r\n            <div className={s.rateCheckBoxesWrapper}>\r\n              {rate.data.map(({ rateTypeId, id, price }) => {\r\n                return (\r\n                  <RadioInput\r\n                    key={rateTypeId.id}\r\n                    id={rateTypeId.id}\r\n                    value={currentRate || rateTypeId.name}\r\n                    inputName={rateTypeId.name}\r\n                    currentInputType={currentRate}\r\n                    handleChange={(event) => handleRateChange(event, rateTypeId.name, id)}\r\n                    ratePrice={price}\r\n                    rateUnit={rateTypeId.unit}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={s.additionalBlock}>\r\n            <span className={`${s.additionalInputBlock}`}>Доп услуги</span>\r\n            <div\r\n              className={`${s.checkBoxesWrapper} ${s.additionalParametersCheckboxes}`}\r\n            >\r\n              {addParams.map(({ id, name, price, checked }) => {\r\n                return (\r\n                  <CheckBoxInput\r\n                    key={id}\r\n                    id={id}\r\n                    checked={checked}\r\n                    inputName={name}\r\n                    price={price}\r\n                    handleChange={handleParamsChange}\r\n                    currentInputType={isChecked}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <OrderInfoContainer btnName=\"Итого\" available={isTest} btnLink=\"OrderResult\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Additional;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Additional from \"./Additional\";\r\nimport {\r\n  setCarColor,\r\n  setCarRate,\r\n  setCarParams,\r\n  setDiffDate,\r\n  setStartDate,\r\n  setEndDate,\r\n  setCarRateId,\r\n} from \"./../../Redux/model-reducer\";\r\nimport { getRate } from \"./../../Redux/orderPage-reducer.js\";\r\nimport Preloader from \"./../../Components/Preloader/Preloader\";\r\n\r\nconst AdditionalContainer = ({\r\n  getRate,\r\n  cars,\r\n  rate,\r\n  color,\r\n  modelName,\r\n  setCarColor,\r\n  setCarRate,\r\n  addParams,\r\n  setCarParams,\r\n  setDiffDate,\r\n  currentModel,\r\n  diffDate,\r\n  modelRate,\r\n  startDateRedux,\r\n  endDateRedux,\r\n  setStartDate,\r\n  setEndDate,\r\n  setCarRateId,\r\n}) => {\r\n  useEffect(() => {\r\n    getRate();\r\n  }, []);\r\n\r\n  if (!rate || rate.length === 0 || !addParams || addParams.length === 0) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <Additional\r\n      {...{\r\n        cars,\r\n        rate,\r\n        color,\r\n        modelName,\r\n        setCarColor,\r\n        setCarRate,\r\n        addParams,\r\n        setCarParams,\r\n        setDiffDate,\r\n        currentModel,\r\n        diffDate,\r\n        modelRate,\r\n        startDateRedux,\r\n        endDateRedux,\r\n        setStartDate,\r\n        setEndDate,\r\n        setCarRateId,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cars: state.model.models,\r\n  modelName: state.model.modelName,\r\n  color: state.model.color,\r\n  rate: state.orderPage.rate,\r\n  modelRate: state.model.rate,\r\n  carRate: state.model.rate,\r\n  addParams: state.model.additionalParameters,\r\n  currentModel: state.model.currentModel,\r\n  diffDate: state.model.diffDate,\r\n  startDateRedux: state.model.startDate,\r\n  endDateRedux: state.model.endDate,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getRate,\r\n  setCarColor,\r\n  setCarRate,\r\n  setCarParams,\r\n  setDiffDate,\r\n  setStartDate,\r\n  setEndDate,\r\n  setCarRateId,\r\n})(AdditionalContainer);\r\n","import react from \"react\";\r\nimport s from \"./ConfirmOrder.module.scss\";\r\nimport { Form} from \"react-final-form\";\r\n\r\nconst ConfirmOrder = ({ setConfirmFormActive, isConfirmFormActive, handleFormSubmit}) => {\r\n  return (\r\n    <div className={s.confirmOrderWrapper}>\r\n      <div className={s.confirmOrderContainer}>\r\n        <Form\r\n          onSubmit={handleFormSubmit}\r\n          render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className={s.formWrapper}>\r\n                <div className={s.confirmOrderText}>Подтвердить заказ</div>\r\n                <div className={s.formBtnWrapper}>\r\n                  <button className={s.formConfirmBtn} type=\"submit\">Подтвердить</button>\r\n                  <button  className={`${s.formConfirmBtn} ${s.redColor}`}\r\n                    type=\"button\"\r\n                    onClick={() => setConfirmFormActive(!isConfirmFormActive)}\r\n                  >\r\n                    Вернуться\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmOrder;\r\n","export const formatCarNumber = (carNumber) => {\r\n    const first = carNumber.slice(0, 1).toLocaleUpperCase();\r\n    const second = carNumber.slice(1, 4);\r\n    const third = carNumber.slice(4, 6).toLocaleUpperCase();\r\n    const region = carNumber.slice(6, carNumber.length);\r\n\r\n    return `${first} ${second} ${third} ${region}`;\r\n}","import react, { useState } from \"react\";\r\nimport s from \"./ResultOrder.module.scss\";\r\nimport OrderInfoContainer from \"../../Components/OrderInfo/OrderInfoContainer\";\r\nimport carNameStyle from \"../BookPageModel/ModelPage.module.scss\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport \"moment-duration-format\";\r\nimport { prepareImgLink } from \"../../commonScripts/scripts\";\r\nimport ConfirmOrder from \"../ConfirmOrder/ConfirmOrder\";\r\nimport { formatCarNumber } from \"./../../commonScripts/formatCarNumber\";\r\nrequire(\"moment-duration-format\");\r\n\r\nconst ResultOrder = ({\r\n  currentModel,\r\n  addParams,\r\n  startDate,\r\n  isConfirmFormActive,\r\n  confirmData,\r\n  orderData\r\n}) => {\r\n  // if(orderData && orderData.data.length !== 0){\r\n  //   currentModel.name = orderData.data.carId.name;\r\n  //   currentModel.number = orderData.data.number;\r\n  //   currentModel.thumbnail.path = orderData.data.thumbnail.path;\r\n  // }\r\n  return (\r\n    <div className={s.resultOrderWrapper}>\r\n      <div className={s.resultOrderContainer}>\r\n        <div className={s.resultInfoBLock}>\r\n          <ul>\r\n            {confirmData && confirmData.length !== 0 && (\r\n              <div className={s.confirmOrderText}>Ваш заказ подтверждён</div>\r\n            )}\r\n            <li className={carNameStyle.carModelName}>{currentModel.name}</li>\r\n            {currentModel.number ? (\r\n              <li className={` ${s.carNumber} ${s.text}`}>\r\n                {formatCarNumber(currentModel.number)}\r\n              </li>\r\n            ) : (\r\n              <li className={` ${s.carNumber} ${s.text}`}>\r\n                <span className={`${s.extraText}`}>\r\n                  {formatCarNumber(\"А111АА111\")}\r\n                </span>\r\n              </li>\r\n            )}\r\n            {addParams.map(({ resultName, resultValue, id, checked }) => {\r\n              if (checked)\r\n                return (\r\n                  <li key={id}>\r\n                    <span className={`${s.liName} ${s.text}`}>\r\n                      {resultName}{\" \"}\r\n                    </span>\r\n                    <span className={`${s.extraText}`}>{resultValue}</span>\r\n                  </li>\r\n                );\r\n            })}\r\n            <li>\r\n              <span className={`${s.liName} ${s.text}`}>Доступна с</span>{\" \"}\r\n              <span className={`${s.extraText}`}>\r\n                {moment(startDate).format(\"DD.MM.YYYY HH.MM\")}\r\n              </span>{\" \"}\r\n            </li>\r\n          </ul>\r\n          <div\r\n            className={s.carImgWrapper}\r\n            style={{\r\n              backgroundImage: `url(${prepareImgLink(\r\n                currentModel.thumbnail.path\r\n              )})`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <OrderInfoContainer btnName=\"Заказать\" noLink={true} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultOrder;\r\n","import { simbirsoftAPI } from \"./../API/api\";\r\n\r\nconst SET_CONFIRM_DATA = \"SET_CONFIRM_DATA\";\r\nconst SET_ORDER_DATA = \"SET_ORDER_DATA\";\r\n\r\nlet initialState = {\r\n  confirmData: [],\r\n  orderData: [],\r\n};\r\n\r\nconst ConfirmOrderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CONFIRM_DATA:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        confirmData: action.data,\r\n      };\r\n    case SET_ORDER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        orderData: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setConfirmData = (data) => ({\r\n  type: SET_CONFIRM_DATA,\r\n  data,\r\n});\r\n\r\nexport const setOrderData = (data) => ({\r\n  type: SET_ORDER_DATA,\r\n  data,\r\n});\r\n\r\nexport const postOrder = (res) => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.postOrder(res);\r\n    dispatch(setConfirmData(response));\r\n    //localStorage.setItem(\"orderInfo\", JSON.stringify(response));\r\n  };\r\n};\r\n\r\nexport const getOrderInfo = (orderId) => {\r\n  return async (dispatch) => {\r\n    const response = await simbirsoftAPI.getOrder(orderId);\r\n    dispatch(setOrderData(response));\r\n  }\r\n}\r\n\r\nexport default ConfirmOrderReducer;\r\n","import react, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport ResultOrder from \"./ResultOrder\";\r\nimport queryString from \"query-string\";\r\nimport { getOrderInfo } from \"../../Redux/confirmOrder-reducer\";\r\n\r\nconst ResultOrderContainer = ({\r\n  currentModel,\r\n  addParams,\r\n  startDate,\r\n  confirmData,\r\n  getOrderInfo,\r\n  orderData,\r\n}) => {\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (confirmData.length !== 0) {\r\n      const location = history.location.pathname;\r\n      const orderId = confirmData.data.id;\r\n      const searchString = `?orderId=${orderId}`;\r\n      history.push(`${location}${searchString}`);\r\n      getOrderInfo(orderId);\r\n    }\r\n  }, [confirmData]);\r\n\r\n  return (\r\n    <ResultOrder\r\n      {...{\r\n        currentModel,\r\n        addParams,\r\n        startDate,\r\n        confirmData,\r\n        getOrderInfo,\r\n        orderData,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentModel: state.model.currentModel,\r\n  addParams: state.model.additionalParameters,\r\n  startDate: state.model.startDate,\r\n  confirmData: state.confirm.confirmData,\r\n  orderData: state.confirm.orderData,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOrderInfo })(ResultOrderContainer);\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport ConfirmOrder from \"./ConfirmOrder\";\r\nimport { connect } from \"react-redux\";\r\nimport { setConfirmFormActive } from \"./../../Redux/orderPage-reducer\";\r\nimport queryString from \"query-string\";\r\nimport { getOrderInfo, postOrder } from \"./../../Redux/confirmOrder-reducer\";\r\nimport \"moment/locale/ru\";\r\nimport \"moment-duration-format\";\r\nimport moment from \"moment\";\r\nimport { Route } from \"react-router\";\r\nimport { useHistory } from \"react-router\";\r\nimport ResultOrderContainer from \"../BookPageResult/ResultOrderContainer\";\r\nimport Preloader from \"../../Components/Preloader/Preloader\";\r\nrequire(\"moment-duration-format\");\r\n\r\nconst ConfirmOrderContainer = ({\r\n  city,\r\n  address,\r\n  color,\r\n  rate,\r\n  addParams,\r\n  startDate,\r\n  endDate,\r\n  currentModel,\r\n  isConfirmFormActive,\r\n  setConfirmFormActive,\r\n  rateId,\r\n  resultPrice,\r\n  postOrder,\r\n  points,\r\n  cities,\r\n  confirmData,\r\n  getOrderInfo,\r\n}) => {\r\n  let pointId = \"\";\r\n  let cityId = \"\";\r\n\r\n  points.data.filter((point) => {\r\n    if (\r\n      address[0].name.replace(/[\\s.,%]/g, \"\") ===\r\n      point.address.replace(/[\\s.,%]/g, \"\")\r\n    ) {\r\n      return (pointId = point.id);\r\n    }\r\n  });\r\n\r\n  cities.data.filter((cities) => {\r\n    if (city === cities.name) {\r\n      return (cityId = cities.id);\r\n    }\r\n  });\r\n\r\n  let history = useHistory();\r\n\r\n  const isFullTank = addParams[0].checked;\r\n  const isNeedChildChair = addParams[1].checked;\r\n  const isRigthWheel = addParams[2].checked;\r\n\r\n  const res = {\r\n    orderStatusId: {\r\n      name: \"new\",\r\n      id: \"5e26a191099b810b946c5d89\",\r\n    },\r\n    cityId: cityId.toString(),\r\n    pointId: pointId.toString(),\r\n    carId: currentModel.id.toString(),\r\n    color: color.toString(),\r\n    dateFrom: moment.duration(startDate)._milliseconds,\r\n    dateTo: moment.duration(endDate)._milliseconds,\r\n    rateId: rateId.toString(),\r\n    price: parseFloat(resultPrice.replace(/\\s/g, \"\")),\r\n    isFullTank: Boolean(isFullTank),\r\n    isNeedChildChair: Boolean(isNeedChildChair),\r\n    isRightWheel: Boolean(isRigthWheel),\r\n  };\r\n\r\n  const handleFormSubmit = () => {\r\n    postOrder(res);\r\n    setConfirmFormActive(!isConfirmFormActive);\r\n  };\r\n\r\n  return (\r\n    <ConfirmOrder\r\n      {...{\r\n        isConfirmFormActive,\r\n        setConfirmFormActive,\r\n        city,\r\n        address,\r\n        color,\r\n        rate,\r\n        addParams,\r\n        startDate,\r\n        endDate,\r\n        currentModel,\r\n        isFullTank,\r\n        isNeedChildChair,\r\n        isRigthWheel,\r\n        handleFormSubmit,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  city: state.orderPage.currentInputCityValue,\r\n  address: state.orderPage.cityAdresses,\r\n  color: state.model.color,\r\n  rate: state.model.rate,\r\n  rateId: state.model.rateId,\r\n  addParams: state.model.additionalParameters,\r\n  startDate: state.model.startDate,\r\n  endDate: state.model.endDate,\r\n  currentModel: state.model.currentModel,\r\n  isConfirmFormActive: state.orderPage.isConfirmFormActive,\r\n  resultPrice: state.model.resultPrice,\r\n  points: state.orderPage.points,\r\n  cities: state.orderPage.cities,\r\n  confirmData: state.confirm.confirmData,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getOrderInfo,\r\n  setConfirmFormActive,\r\n  postOrder,\r\n})(ConfirmOrderContainer);\r\n","import react, { useState } from \"react\";\r\nimport s from \"./InitializeOrder.module.scss\";\r\nimport OrderInfoContainer from \"../../Components/OrderInfo/OrderInfoContainer\";\r\nimport carNameStyle from \"../BookPageModel/ModelPage.module.scss\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport \"moment-duration-format\";\r\nimport { prepareImgLink } from \"../../commonScripts/scripts\";\r\nimport ConfirmOrder from \"../ConfirmOrder/ConfirmOrder\";\r\nimport { formatCarNumber } from \"../../commonScripts/formatCarNumber\";\r\nrequire(\"moment-duration-format\");\r\n\r\nconst InitializeOrderInfo = ({\r\n  currentModel,\r\n  addParams,\r\n  startDate,\r\n  isConfirmFormActive,\r\n  confirmData,\r\n  orderData,\r\n}) => {\r\n  return (\r\n    <div className={s.resultOrderWrapper}>\r\n      <div className={s.resultOrderContainer}>\r\n        <div className={s.resultInfoBLock}>\r\n          <ul>\r\n            {orderData && orderData.length !== 0 && (\r\n              <div className={s.confirmOrderText}>Ваш заказ подтверждён</div>\r\n            )}\r\n            <li className={carNameStyle.carModelName}>\r\n              {orderData.data.carId.name}\r\n            </li>\r\n            {orderData.data.carId.number ? (\r\n              <li className={` ${s.carNumber} ${s.text}`}>\r\n                {formatCarNumber(orderData.data.carId.number)}\r\n              </li>\r\n            ) : (\r\n              <li className={` ${s.carNumber} ${s.text}`}>\r\n                <span className={`${s.extraText}`}>\r\n                  {formatCarNumber(\"А111АА111\")}\r\n                </span>\r\n              </li>\r\n            )}\r\n            {orderData.data.isFullTank && (\r\n              <li>\r\n                {\" \"}\r\n                <span className={`${s.liName} ${s.text}`}>Топливо</span>\r\n                <span className={`${s.extraText}`}> 100%</span>\r\n              </li>\r\n            )}\r\n            {orderData.data.isNeedChildChair && (\r\n              <li>\r\n                {\" \"}\r\n                <span className={`${s.liName} ${s.text}`}>Детское кресло</span>\r\n                <span className={`${s.extraText}`}> Да</span>\r\n              </li>\r\n            )}\r\n            {orderData.data.isRightWheel && (\r\n              <li>\r\n                {\" \"}\r\n                <span className={`${s.liName} ${s.text}`}>Правый руль</span>\r\n                <span className={`${s.extraText}`}> Да</span>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <span className={`${s.liName} ${s.text}`}>Доступна с</span>{\" \"}\r\n              <span className={`${s.extraText}`}>\r\n                {moment(orderData.data.dateFrom).format(\"DD.MM.YYYY HH.MM\")}\r\n              </span>{\" \"}\r\n            </li>\r\n          </ul>\r\n          <div\r\n            className={s.carImgWrapper}\r\n            style={{\r\n              backgroundImage: `url(${prepareImgLink(\r\n                orderData.data.carId.thumbnail.path\r\n              )})`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <OrderInfoContainer btnName=\"Заказать\" noLink={true}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitializeOrderInfo;\r\n","import react, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport ResultOrder from \"./InitializeOrderInfo\";\r\nimport queryString from \"query-string\";\r\nimport { getOrderInfo } from \"../../Redux/confirmOrder-reducer\";\r\nimport InitializeOrderInfo from \"./InitializeOrderInfo\";\r\nimport Preloader from \"../../Components/Preloader/Preloader\";\r\n\r\nconst IntializeOrderInfoContainer = ({\r\n  currentModel,\r\n  addParams,\r\n  startDate,\r\n  confirmData,\r\n  getOrderInfo,\r\n  orderData,\r\n}) => {\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    const values = queryString.parse(history.location.search);\r\n    const orderId = values.orderId;\r\n    getOrderInfo(orderId);\r\n  }, [confirmData]);\r\n\r\n  if (orderData.length === 0) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <InitializeOrderInfo\r\n      {...{\r\n        currentModel,\r\n        addParams,\r\n        startDate,\r\n        confirmData,\r\n        getOrderInfo,\r\n        orderData,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentModel: state.model.currentModel,\r\n  addParams: state.model.additionalParameters,\r\n  startDate: state.model.startDate,\r\n  confirmData: state.confirm.confirmData,\r\n  orderData: state.confirm.orderData,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOrderInfo })(\r\n  IntializeOrderInfoContainer\r\n);\r\n","import React from \"react\";\r\nimport s from \"./BookPage.module.scss\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./../../Components/Header/Header\";\r\nimport BookPageLocationContainer from \"../BookPageLocation/BookPageLocationContainer\";\r\nimport BookingStagesContainer from \"./../../Components/BookingStages/BookingStagesContainer\";\r\nimport BookPageModelContainer from \"./../BookPageModel/ModelContainer\";\r\nimport AdditionalContainer from \"./../BookPageAdditional/AdditionalContainer\";\r\nimport ResultOrderContainer from \"../BookPageResult/ResultOrderContainer\";\r\nimport ConfirmOrderContainer from \"../ConfirmOrder/ConfirmOrderContainer\";\r\nimport IntializeOrderInfoContainer from \"./../IntitializeOrderInfo/InitializeOrderInfoContainer\";\r\nimport queryString from \"query-string\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst BookPage = ({ isAvail, isConfirmFormActive }) => {\r\n  return (\r\n    <section className={s.bookPageWrapper}>\r\n      {isConfirmFormActive && <ConfirmOrderContainer />}\r\n      <div className={s.bookHeaderWrapper}>\r\n        <div className={s.bookHeadContainer}>\r\n          <Header />\r\n        </div>\r\n      </div>\r\n\r\n      <BookingStagesContainer />\r\n\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/need-for-drive/bookCar\"\r\n          component={BookPageLocationContainer}\r\n        />\r\n        {!isAvail && (\r\n          <Route\r\n            path=\"/need-for-drive/bookCar/Model\"\r\n            component={BookPageModelContainer}\r\n          />\r\n        )}\r\n\r\n        {!isAvail && (\r\n          <Route\r\n            path=\"/need-for-drive/bookCar/Additionally\"\r\n            component={AdditionalContainer}\r\n          />\r\n        )}\r\n        {!isAvail ? (\r\n          <Route\r\n            exact\r\n            path=\"/need-for-drive/bookCar/OrderResult\"\r\n            component={ResultOrderContainer}\r\n          />\r\n        ) : (\r\n          <Route\r\n            exact\r\n            path=\"/need-for-drive/bookCar/OrderResult\"\r\n            component={IntializeOrderInfoContainer}\r\n          />\r\n        )}\r\n      </Switch>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BookPage;\r\n","import React, { useEffect } from \"react\";\r\nimport BookPage from \"./BookPage\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOrderInfo } from \"../../Redux/confirmOrder-reducer\";\r\nimport queryString from \"query-string\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst BookPageContainer = ({\r\n  isAvail,\r\n  isConfirmFormActive,\r\n  confirmData,\r\n  getOrderInfo,\r\n}) => {\r\n  return <BookPage {...{ isAvail, isConfirmFormActive }} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAvail: state.orderPage.isModelAvailable,\r\n  isConfirmFormActive: state.orderPage.isConfirmFormActive,\r\n  confirmData: state.confirm.confirmData,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOrderInfo })(BookPageContainer);\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Main from \"../../Components/Main/Main\";\r\nimport SideBar from \"../../Components/SideBar/SideBar\";\r\nimport Slider from \"../../Components/Slider/Slider\";\r\nimport s from \"./StrartSrceen.module.scss\";\r\nimport BurgerMenu from \"../../Components/BurgerMenu/BurgerMenu\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport BookPageContainer from './../BookPage/BookPageContainer';\r\n\r\nconst StartScreen = (props) => {\r\n  const [menuIsActive, setMenuActive] = useState(false);\r\n  const [langBtnClicked, changeSiteLang] = useState(false);\r\n\r\n  return (\r\n    <div className={s.startScreenWrapper}>\r\n      {menuIsActive && <BurgerMenu />}\r\n      <SideBar\r\n        isActive={menuIsActive}\r\n        setActive={setMenuActive}\r\n        langBtnClicked={langBtnClicked}\r\n        changeSiteLang={changeSiteLang}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/need-for-drive/\">\r\n          <Main />\r\n          <Slider />\r\n        </Route>\r\n        <Route path=\"/need-for-drive/bookCar\">\r\n          <BookPageContainer/>\r\n        </Route>\r\n        \r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartScreen;\r\n","import \"./App.css\";\nimport StartScreen from \"./Pages/StartSreen/StartScreen\";\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <StartScreen />\n    </div>\n  );\n};\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport orderPageReducer from './orderPage-reducer';\r\nimport locationReducer from './location-reducer';\r\nimport modelReducer from './model-reducer';\r\nimport ConfirmOrderReducer from './confirmOrder-reducer';\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    orderPage: orderPageReducer,\r\n    location: locationReducer,\r\n    model: modelReducer,\r\n    confirm: ConfirmOrderReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/redux-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider-list\":\"slide_slider-list__1Lt1y\",\"slider-slide\":\"slide_slider-slide__2euHX\",\"sliderItem\":\"slide_sliderItem__2CzEt\",\"sliderImgWrapper\":\"slide_sliderImgWrapper__3WJFk\",\"sliderImg\":\"slide_sliderImg__2t4J1\",\"sliderContent\":\"slide_sliderContent__49SAC\",\"buttonContainer\":\"slide_buttonContainer__3mtSg\",\"sliderButton\":\"slide_sliderButton__JyW49\",\"slider_bottom\":\"slide_slider_bottom__25EQW\",\"active\":\"slide_active__12Yky\",\"dot\":\"slide_dot__2n3Ov\",\"green\":\"slide_green__3gNMc\",\"blue\":\"slide_blue__3QNly\",\"red\":\"slide_red__J2pHN\",\"purple\":\"slide_purple__3TLQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderStepsWrapper\":\"BookingStages_orderStepsWrapper__2mPs8\",\"orderStepsContainer\":\"BookingStages_orderStepsContainer__2dIMh\",\"yourOrderText\":\"BookingStages_yourOrderText__W_UZO\",\"orderStep\":\"BookingStages_orderStep__e-RU6\",\"disabled\":\"BookingStages_disabled__11TkH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"Main_mainWrapper__1cEOx\",\"mainTitle\":\"Main_mainTitle__1TpRE\",\"mainLogo\":\"Main_mainLogo__37mbh\",\"name\":\"Main_name__1l1bi\",\"mainSlog\":\"Main_mainSlog__Y9QZ8\",\"mainFooter\":\"Main_mainFooter__2pwf5\",\"copyright\":\"Main_copyright__2Jvdb\",\"phone\":\"Main_phone__7gfn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBarWrapper\":\"SideBar_sideBarWrapper__97mKM\",\"menuBtn\":\"SideBar_menuBtn__3yGoW\",\"langBtn\":\"SideBar_langBtn__1Ph_T\",\"langBtnWrapper\":\"SideBar_langBtnWrapper__28wyW\",\"langBtnMobile\":\"SideBar_langBtnMobile__1rB0y\",\"langBtnWrapperMobile\":\"SideBar_langBtnWrapperMobile__3Want\",\"openMenuBtn\":\"SideBar_openMenuBtn__292lw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBoxWrapper\":\"RadioInput_checkBoxWrapper__1CrcE\",\"notActiveLable\":\"RadioInput_notActiveLable__202Ha\",\"checkBox\":\"RadioInput_checkBox__1bJWA\",\"radiLabel\":\"RadioInput_radiLabel__KcCRO\",\"modelCarChoose\":\"RadioInput_modelCarChoose__3er1I\",\"modelCarImagesWrapper\":\"RadioInput_modelCarImagesWrapper__3zuOJ\",\"modelPageContainer\":\"RadioInput_modelPageContainer__bflVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmOrderWrapper\":\"ConfirmOrder_confirmOrderWrapper__g3BNW\",\"confirmOrderContainer\":\"ConfirmOrder_confirmOrderContainer__3zqzc\",\"formWrapper\":\"ConfirmOrder_formWrapper__2T2hH\",\"confirmOrderText\":\"ConfirmOrder_confirmOrderText__3RlEI\",\"formBtnWrapper\":\"ConfirmOrder_formBtnWrapper__1Oz4K\",\"formConfirmBtn\":\"ConfirmOrder_formConfirmBtn__1MnIB\",\"redColor\":\"ConfirmOrder_redColor__EonyK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerMenuWrapper\":\"BurgerMenu_burgerMenuWrapper__1N_D3\",\"burgerMenuContainer\":\"BurgerMenu_burgerMenuContainer__3nRjb\",\"burgerMenuLinksWrapper\":\"BurgerMenu_burgerMenuLinksWrapper__1fz3x\",\"burgerMenuLinks\":\"BurgerMenu_burgerMenuLinks__23EIg\",\"socialLinks\":\"BurgerMenu_socialLinks__3WxET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__BjUyV\",\"headerLogo\":\"Header_headerLogo__24K-f\",\"currentCity\":\"Header_currentCity__2ZzQ0\",\"city\":\"Header_city__3VCjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapWrapper\":\"Map_mapWrapper__2nmqq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookPageWrapper\":\"BookPage_bookPageWrapper__1Bus0\",\"bookHeaderWrapper\":\"BookPage_bookHeaderWrapper__1p8UY\",\"bookHeadContainer\":\"BookPage_bookHeadContainer__mnBp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autocomplete\":\"AutoComplete_autocomplete__2ZLch\",\"autocompleteHide\":\"AutoComplete_autocompleteHide__6k5Oz\",\"autocompleteItem\":\"AutoComplete_autocompleteItem__3T0cX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBoxWrapper\":\"CheckBoxInput_checkBoxWrapper__XBstF\",\"checkBoxLabel\":\"CheckBoxInput_checkBoxLabel__38968\",\"notActiveLable\":\"CheckBoxInput_notActiveLable__3mYx2\",\"checkBoxInput\":\"CheckBoxInput_checkBoxInput__1na4d\",\"modelCarChoose\":\"CheckBoxInput_modelCarChoose__1CTBv\",\"modelCarImagesWrapper\":\"CheckBoxInput_modelCarImagesWrapper__-E0M1\",\"modelPageContainer\":\"CheckBoxInput_modelPageContainer__3e906\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderInfoWrapper\":\"OrderInfo_orderInfoWrapper__exWHV\",\"orderInfoBtn\":\"OrderInfo_orderInfoBtn__39es2\",\"disabled\":\"OrderInfo_disabled__2EMxK\",\"yourOrderText\":\"OrderInfo_yourOrderText__1-lp7\",\"addressOrderInfo\":\"OrderInfo_addressOrderInfo__3sE-a\",\"orderInfoCity\":\"OrderInfo_orderInfoCity__1ADtn\",\"attrSpan\":\"OrderInfo_attrSpan__2vT9L\",\"addressDots\":\"OrderInfo_addressDots__1BW2a\",\"liPointName\":\"OrderInfo_liPointName__kUp3T\",\"liName\":\"OrderInfo_liName__134Kp\",\"modelPrice\":\"OrderInfo_modelPrice__1Rk_P\",\"price\":\"OrderInfo_price__1HVf7\",\"priceBorder\":\"OrderInfo_priceBorder__1dWBg\",\"modelPriceHide\":\"OrderInfo_modelPriceHide__34JHp\",\"redBtn\":\"OrderInfo_redBtn__1AiED\",\"hideBtn\":\"OrderInfo_hideBtn__2XiPG\"};"],"sourceRoot":""}